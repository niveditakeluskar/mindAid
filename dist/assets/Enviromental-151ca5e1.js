import{_ as x,l as c,H as h,G as k,m as T,r as b,o as F,e as B,b as l,q as R,I as C,k as M,i as q,M as V,f as w,N as A,d as G}from"./appInertia-949a05bd.js";import K from"./AgGridTable-e4c69b38.js";import L from"./AllergiesShortForm-ec167520.js";import"./AgGridTable.vue_vue_type_style_index_0_lang-f3773bde.js";const O={props:{patientId:Number,moduleId:Number,componentId:Number,stageId:Number},components:{EnviromentalForm:L,AgGridTable:K},data(){return{allergyStatus:!1,enviromentalAllergiesRowData:[]}},computed:{enviromentalAllergiesRowCount(){return this.enviromentalAllergiesRowData.length}},methods:{hideShowNKDAMsg(e,o){var d=$("#"+e).val();d>0&&($("#"+o).show(),setTimeout(function(){$("#"+o).hide()},5e3))},noAllergiesCheck(){if(this.allergyStatus){$(".noallergiescheck").closest("form");var e="allergy_enviromental_form";this.hideShowNKDAMsg("enviromentalcount","msg"),$("form[name='"+e+"'] input[name='specify']").val(""),$("form[name='"+e+"'] input[name='type_of_reactions']").val(""),$("form[name='"+e+"'] input[name='severity']").val(""),$("form[name='"+e+"'] input[name='course_of_treatment']").val(""),$("form[name='"+e+"'] textarea[name='notes']").val(""),$("form[name='"+e+"'] input[name='specify']").attr("disabled","disabled"),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!0),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!0),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!0),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!0)}else{$(".noallergiescheck").closest("form");var e="allergy_enviromental_form";$("form[name='"+e+"']")[0].reset(),$("form[name='"+e+"'] input[name='specify']").prop("disabled",!1),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!1),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!1),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!1),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!1)}}},setup(e){let o=c(!1),d=c(0),r=c(0),u=c(null),i=c([]);const v=c(!1),f=c([]);let _=c([{headerName:"Sr. No.",valueGetter:"node.rowIndex + 1",initialWidth:20},{headerName:"Specify",field:"specify",filter:!0},{headerName:"Type of Reactions",field:"type_of_reactions"},{headerName:"Severity",field:"severity"},{headerName:"Course of Treatment",field:"course_of_treatment"},{headerName:"Allergy Status",field:"allergy_status"},{headerName:"Last Modified By",field:"users.f_name",cellRenderer:function(a){const t=a.data;return t&&t.users&&t.users.f_name?t.users.f_name+" "+(t.users.l_name||""):"N/A"}},{headerName:"Last Modified On",field:"updated_at"},{headerName:"Action",field:"action",cellRenderer:function(a){const t=a.data;return t&&t.action?t.action:""}}]);const p=async()=>{try{v.value=!0,await new Promise(m=>setTimeout(m,2e3));const a=window.location.origin,t=await fetch(`${a}/ccm/allergies/${e.patientId}/enviromental`);if(!t.ok)throw new Error("Failed to fetch followup task list");v.value=!1;const n=await t.json();f.value=n.data}catch(a){console.error("Error fetching followup task list:",a),v.value=!1}};let I=async()=>{i.value={};let a=document.getElementById("allergy_enviromental_form"),t=new FormData(a),n={};t.forEach((s,D)=>{n[D]=s});try{const s=await saveAllergies(n);console.log("in enviromental saveAllergiesResponse",s),o.value=!0,updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(s.form_start_time),await p();var m=$("#allergy_enviromental_form")[0];m.reset(),$(m).find(":input").prop("disabled",!1),setTimeout(()=>{o.value=!1,u.value=document.getElementById("page_landing_times").value},3e3),i.value=[]}catch(s){s.status&&s.status===422?i.value=s.responseJSON.errors:console.error("Error submitting form:",s),console.error("Error in saveAllergies",i.value)}},E=async a=>{try{let t="Enviromental";r=(await G.get(`/get_step_id/${e.moduleId}/${e.componentId}/${a}/${t}`)).data.stepID,console.log("stepIDstepID",r)}catch{throw new Error("Failed to fetch stageID")}},g=async(a,t)=>{if(window.confirm("Are you sure you want to delete this Allergies?")){const n={id:a,uid:e.patientId,patient_id:e.patientId,module_id:e.moduleId,component_id:e.componentId,stage_id:e.stageId,step_id:r.value,form_name:"allergy_enviromental_form",billable:1,start_time:"00:00:00",end_time:"00:00:00",form_start_time:document.getElementById("page_landing_times").value};try{const m=await deleteAllergiesDetails(n);updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(m.form_start_time),await p(),document.getElementById("allergy_enviromental_form").reset(),setTimeout(()=>{u.value=document.getElementById("page_landing_times").value},3e3)}catch(m){console.error("Error deletting record:",m)}}},y=async a=>{try{const t=f.value.find(n=>n.id==a);if(console.log(t),t){const n=document.getElementById("allergy_enviromental_form");n.querySelector("#allergies_id").value=t.id,n.querySelector("#specify").value=t.specify,n.querySelector("#type_of_reactions").value=t.type_of_reactions,n.querySelector("#severity").value=t.severity,n.querySelector("#course_of_treatment").value=t.course_of_treatment,n.querySelector("#notes").value=t.notes,n.scrollIntoView({behavior:"smooth"})}}catch(t){console.error("Error editing allergies:",t)}};const S=()=>{window.deleteAllergies=g},N=()=>{window.editAllergy=y};return h(()=>e.stageId,(a,t)=>{E(a)}),h(()=>o,(a,t)=>{o.value=a}),k(()=>{p()}),T(async()=>{try{u.value=document.getElementById("page_landing_times").value,S(),N()}catch(a){console.error("Error on page load:",a)}}),{loading:v,submitAllergiesForm:I,enviromentalallergiesStageId:d,enviromentalallergiesStepId:r,formErrors:i,enviromentalallergiesTime:u,showenviromentalAlert:o,enviromentalAllergiescolumnDefs:_,enviromentalAllergiesRowData:f,fetchPatientEnviromentalList:p,deleteAllergies:g,editAllergy:y}}},P={class:"tab-pane fade show active",id:"enviromental",role:"tabpanel","aria-labelledby":"enviromental-allergies-icon-pill"},j={class:"card"},z=l("div",{class:"card-header"},[l("h4",null,"Enviromental")],-1),U=l("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1),H=l("strong",null," Enviromental Allergies data saved successfully! ",-1),J=l("span",{id:"text"},null,-1),W=[U,H,J],Q={class:"form-row col-md-12"},X=["value"],Y=["value"],Z=l("input",{type:"hidden",name:"start_time",value:"00:00:00"},null,-1),ee=l("input",{type:"hidden",name:"end_time",value:"00:00:00"},null,-1),te=["value"],le=["value"],ae=["value"],ne=["value"],oe=A('<input type="hidden" name="form_name" value="allergy_enviromental_form"><input type="hidden" name="billable" value="1"><input type="hidden" name="allergy_type" value="enviromental"><input type="hidden" name="hid" class="hid" value="1"><input type="hidden" name="id" id="allergies_id">',5),re=["value"],ie=l("input",{type:"hidden",name:"noallergymsg",id:"noallergymsg",value:"No Known Enviromental Allergies"},null,-1),se={class:"checkbox noAllergiesLbl",style:{"z-index":"1"}},de=l("div",{id:"msg",style:{color:"red",display:"none"}},"Please delete all data from below table to enable checkbox!",-1),me=l("span",{class:"checkmark"},null,-1),ce=["value"],ue=A('<div class="card-footer"><div class="mc-footer"><div class="row"><div class="col-lg-12 text-right"><button type="submit" class="btn btn-primary m-1" id="save_allergy_enviromental_form">Save</button></div></div></div></div><div class="alert alert-danger" id="danger-alert" style="display:none;"><button type="button" class="close" data-dismiss="alert">x</button><strong> Please Fill All mandatory Fields! </strong><span id="text"></span></div>',2),_e=l("div",{class:"separator-breadcrumb border-top"},null,-1),ve={class:"row"},fe={class:"col-12"};function pe(e,o,d,r,u,i){const v=b("EnviromentalForm"),f=b("AgGridTable");return F(),B("div",P,[l("div",j,[z,l("form",{id:"allergy_enviromental_form",name:"allergy_enviromental_form",onSubmit:o[2]||(o[2]=R((..._)=>r.submitAllergiesForm&&r.submitAllergiesForm(..._),["prevent"]))},[l("div",{class:"alert alert-success",style:C({display:r.showenviromentalAlert?"block":"none"})},W,4),l("div",Q,[l("input",{type:"hidden",name:"uid",value:d.patientId},null,8,X),l("input",{type:"hidden",name:"patient_id",value:d.patientId},null,8,Y),Z,ee,l("input",{type:"hidden",name:"module_id",value:d.moduleId},null,8,te),l("input",{type:"hidden",name:"component_id",value:d.componentId},null,8,le),l("input",{type:"hidden",name:"stage_id",value:r.enviromentalallergiesStageId},null,8,ae),l("input",{type:"hidden",name:"step_id",value:r.enviromentalallergiesStepId},null,8,ne),oe,l("input",{type:"hidden",name:"timearr[form_start_time]",class:"timearr form_start_time",value:r.enviromentalallergiesTime},null,8,re),ie,l("label",se,[M(" No Known Enviromental Allergies "),q(l("input",{type:"checkbox","onUpdate:modelValue":o[0]||(o[0]=_=>u.allergyStatus=_),name:"allergy_status",onChange:o[1]||(o[1]=(..._)=>i.noAllergiesCheck&&i.noAllergiesCheck(..._)),style:{position:"absolute","z-index":"-1"}},null,544),[[V,u.allergyStatus]]),de,me]),l("input",{type:"hidden",id:"enviromentalcount",value:i.enviromentalAllergiesRowCount},null,8,ce),w(v,{formErrors:r.formErrors},null,8,["formErrors"])]),ue],32),_e,l("div",ve,[l("div",fe,[w(f,{rowData:r.enviromentalAllergiesRowData,columnDefs:r.enviromentalAllergiescolumnDefs},null,8,["rowData","columnDefs"])])])])])}const we=x(O,[["render",pe]]);export{we as default};
