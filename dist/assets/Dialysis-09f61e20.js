import{_ as q,l as d,H as g,G as F,m as T,r as b,o as B,e as x,b as s,q as A,I as P,f as I,d as R,N as w}from"./appInertia-949a05bd.js";import G from"./AgGridTable-e4c69b38.js";import M from"./ServicesLongForm-03fbce8c.js";import"./AgGridTable.vue_vue_type_style_index_0_lang-f3773bde.js";const O={props:{patientId:Number,moduleId:Number,componentId:Number,stageId:Number},components:{DialysisForm:M,AgGridTable:G},setup(i){let n=d(!1),l=d(0),o=d(0),m=d(null),u=d([]);const c=d(!1),_=d([]),f=d([{headerName:"Sr. No.",valueGetter:"node.rowIndex + 1",initialWidth:20},{headerName:"Types",field:"type",filter:!0},{headerName:"Purpose",field:"purpose"},{headerName:"Company Name",field:"specify"},{headerName:"Prescribing Provider",field:"brand"},{headerName:"Frequency",field:"frequency"},{headerName:"Service Start Date",field:"service_start_date"},{headerName:"Service End Date",field:"service_end_date"},{headerName:"Last Modified By",field:"users.f_name",cellRenderer:function(t){const e=t.data;return e&&e.users.f_name?e.users.f_name+" "+e.users.l_name:"N/A"}},{headerName:"Last Modified On",field:"updated_at"},{headerName:"Action",field:"action",cellRenderer:function(t){const e=t.data;return e&&e.action?e.action:""}}]),y=async()=>{try{c.value=!0,await new Promise(a=>setTimeout(a,2e3));const t=await fetch(`/ccm/care-plan-development-services-list/${i.patientId}/3`);if(!t.ok)throw new Error("Failed to fetch services list");c.value=!1;const e=await t.json();_.value=e.data}catch(t){console.error("Error fetching services list:",t),c.value=!1}},D=async()=>{u.value={};let t=document.getElementById("service_dialysis_form"),e=new FormData(t),a={};e.forEach((r,v)=>{a[v]=r});try{const r=await saveServices(a);n.value=!0,updateTimer(i.patientId,"1",i.moduleId),$(".form_start_time").val(r.form_start_time),await y(),document.getElementById("service_dialysis_form").reset(),setTimeout(()=>{n.value=!1,m.value=document.getElementById("page_landing_times").value},3e3),u.value=[]}catch(r){r.status&&r.status===422?u.value=r.responseJSON.errors:console.error("Error submitting form:",r)}},p=async t=>{try{let e="Service-Dialysis",a=await R.get(`/get_step_id/${i.moduleId}/${i.componentId}/${t}/${e}`);o.value=a.data.stepID}catch{throw new Error("Failed to fetch stageID")}},h=async(t,e)=>{if(window.confirm("Are you sure you want to delete this Service?")){const a={id:t,uid:i.patientId,patient_id:i.patientId,module_id:i.moduleId,component_id:i.componentId,stage_id:i.stageId,step_id:o.value,form_name:"service_dialysis_form",billable:1,start_time:"00:00:00",end_time:"00:00:00",form_start_time:document.getElementById("page_landing_times").value};try{const r=await deleteServiceDetails(a);updateTimer(i.patientId,"1",i.moduleId),$(".form_start_time").val(r.form_start_time),await y(),document.getElementById("service_dialysis_form").reset(),setTimeout(()=>{m.value=document.getElementById("page_landing_times").value},3e3)}catch(r){console.error("Error deletting record:",r)}}},S=async t=>{try{const e=_.value.find(a=>a.id==t);if(e){const a=document.getElementById("service_dialysis_form");if(a.querySelector("#service_id").value=e.id,a.querySelector("#type").value=e.type,a.querySelector("#purpose").value=e.purpose,a.querySelector("#specify").value=e.specify,a.querySelector("#brand").value=e.brand,e.service_start_date){const v=new Date(e.service_start_date).toISOString().split("T")[0];a.querySelector("#service_start_date").value=v}if(a.querySelector("#frequency").value=e.frequency,e.service_end_date){const v=new Date(e.service_end_date).toISOString().split("T")[0];a.querySelector("#service_end_date").value=v}a.querySelector("#notes").value=e.notes,a.scrollIntoView({behavior:"smooth"})}}catch(e){console.error("Error editing service:",e)}},E=()=>{window.deleteServices=h},N=()=>{window.editService=S};return g(()=>i.stageId,(t,e)=>{p(t)}),g(()=>n,(t,e)=>{n.value=t}),F(()=>{y()}),T(async()=>{try{m.value=document.getElementById("page_landing_times").value,E(),N(),p(i.stageId)}catch(t){console.error("Error on page load:",t)}}),{loading:c,submitSrvicesForm:D,dialysisServicesStageId:l,dialysisServicesStepId:o,formErrors:u,DialysisServicesTime:m,showDialysisAlert:n,columnDefs:f,dialysisServiceRowData:_,fetchPatientDialysisServiceList:y,deleteServices:h,editService:S}}},V={class:"tab-pane fade show active",id:"dialysis-services",role:"tabpanel","aria-labelledby":"dialysis-services-icon-pill"},k={class:"card"},j=s("div",{class:"card-header"},[s("h4",null,"Dialysis")],-1),L=s("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1),C=s("strong",null," Dialysis Services data saved successfully! ",-1),z=s("span",{id:"text"},null,-1),H=[L,C,z],J={class:"form-row col-md-12"},W=["value"],K=["value"],Q=s("input",{type:"hidden",name:"start_time",value:"00:00:00"},null,-1),U=s("input",{type:"hidden",name:"end_time",value:"00:00:00"},null,-1),X=["value"],Y=["value"],Z=["value"],ee=["value"],te=w('<input type="hidden" name="form_name" value="service_dialysis_form"><input type="hidden" name="service_type" value="dialysis"><input type="hidden" name="hid" class="hid" value="3"><input type="hidden" name="id" id="service_id"><input type="hidden" name="billable" value="1">',5),ae=["value"],se=w('<div class="card-footer"><div class="mc-footer"><div class="row"><div class="col-lg-12 text-right"><button type="submit" class="btn btn-primary m-1" id="save_service_dialysis_form">Save</button></div></div></div></div><div class="alert alert-danger" id="danger-alert" style="display:none;"><button type="button" class="close" data-dismiss="alert">x</button><strong> Please Fill All mandatory Fields! </strong><span id="text"></span></div>',2),ie=s("div",{class:"separator-breadcrumb border-top"},null,-1),re={class:"row"},oe={class:"col-12"};function ne(i,n,l,o,m,u){const c=b("DialysisForm"),_=b("AgGridTable");return B(),x("div",V,[s("div",k,[j,s("form",{id:"service_dialysis_form",name:"service_dialysis_form",onSubmit:n[0]||(n[0]=A((...f)=>o.submitSrvicesForm&&o.submitSrvicesForm(...f),["prevent"]))},[s("div",{class:"alert alert-success",style:P({display:o.showDialysisAlert?"block":"none"})},H,4),s("div",J,[s("input",{type:"hidden",name:"uid",value:l.patientId},null,8,W),s("input",{type:"hidden",name:"patient_id",value:l.patientId},null,8,K),Q,U,s("input",{type:"hidden",name:"module_id",value:l.moduleId},null,8,X),s("input",{type:"hidden",name:"component_id",value:l.componentId},null,8,Y),s("input",{type:"hidden",name:"stage_id",value:o.dialysisServicesStageId},null,8,Z),s("input",{type:"hidden",name:"step_id",value:o.dialysisServicesStepId},null,8,ee),te,s("input",{type:"hidden",name:"timearr[form_start_time]",class:"timearr form_start_time",value:o.DialysisServicesTime},null,8,ae),I(c,{formErrors:o.formErrors},null,8,["formErrors"])]),se],32),ie,s("div",re,[s("div",oe,[I(_,{rowData:o.dialysisServiceRowData,columnDefs:o.columnDefs},null,8,["rowData","columnDefs"])])])])])}const ue=q(O,[["render",ne]]);export{ue as default};
