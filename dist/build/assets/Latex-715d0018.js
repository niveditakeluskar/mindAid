import{_ as E,l as n,H as h,G as k,m as T,r as x,o as F,e as L,b as a,q as B,I as R,k as C,i as M,M as q,f as b,N as w,d as V}from"./appInertia-bd981cc7.js";import G from"./AgGridTable-ef5374d2.js";import K from"./AllergiesShortForm-5982317e.js";import"./AgGridTable.vue_vue_type_style_index_0_lang-56c71005.js";const O={props:{patientId:Number,moduleId:Number,componentId:Number,stageId:Number},components:{latexForm:K,AgGridTable:G},data(){return{allergyStatus:!1,latexAllergiesRowData:[]}},computed:{latexAllergiesRowCount(){return this.latexAllergiesRowData.length}},methods:{hideShowNKDAMsg(e,r){var m=$("#"+e).val();m>0&&($("#"+r).show(),setTimeout(function(){$("#"+r).hide()},5e3))},noAllergiesCheck(){if(this.allergyStatus){$(".noallergiescheck").closest("form");var e="allergy_latex_form";this.hideShowNKDAMsg("latexcount","msg"),$("form[name='"+e+"'] input[name='specify']").val(""),$("form[name='"+e+"'] input[name='type_of_reactions']").val(""),$("form[name='"+e+"'] input[name='severity']").val(""),$("form[name='"+e+"'] input[name='course_of_treatment']").val(""),$("form[name='"+e+"'] textarea[name='notes']").val(""),$("form[name='"+e+"'] input[name='specify']").attr("disabled","disabled"),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!0),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!0),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!0),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!0)}else{$(".noallergiescheck").closest("form");var e="allergy_latex_form";$("form[name='"+e+"']")[0].reset(),$("form[name='"+e+"'] input[name='specify']").prop("disabled",!1),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!1),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!1),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!1),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!1)}}},setup(e){let r=n(!1),m=n(0),s=n(0),c=n(null),i=n([]);const f=n(!1),p=n([]);n(null),n(null),n(null);let _=n([{headerName:"Sr. No.",valueGetter:"node.rowIndex + 1",initialWidth:20},{headerName:"Specify",field:"specify",filter:!0},{headerName:"Type of Reactions",field:"type_of_reactions"},{headerName:"Severity",field:"severity"},{headerName:"Course of Treatment",field:"course_of_treatment"},{headerName:"Allergy Status",field:"allergy_status"},{headerName:"Last Modified By",field:"users.f_name",cellRenderer:function(l){const t=l.data;return t&&t.users&&t.users.f_name?t.users.f_name+" "+(t.users.l_name||""):"N/A"}},{headerName:"Last Modified On",field:"updated_at"},{headerName:"Action",field:"action",cellRenderer:function(l){const t=l.data;return t&&t.action?t.action:""}}]);const g=async()=>{try{f.value=!0,await new Promise(u=>setTimeout(u,2e3));const l=window.location.origin,t=await fetch(`${l}/ccm/allergies/${e.patientId}/latex`);if(!t.ok)throw new Error("Failed to fetch followup task list");f.value=!1;const o=await t.json();p.value=o.data}catch(l){console.error("Error fetching followup task list:",l),f.value=!1}};let A=async()=>{i.value={};let l=document.getElementById("allergy_latex_form"),t=new FormData(l),o={};t.forEach((d,D)=>{o[D]=d});try{const d=await saveAllergies(o);console.log("in latex saveAllergiesResponse",d),r.value=!0,updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(d.form_start_time),await g();var u=$("#allergy_latex_form")[0];u.reset(),$(u).find(":input").prop("disabled",!1),setTimeout(()=>{r.value=!1,c.value=document.getElementById("page_landing_times").value},3e3),i.value=[]}catch(d){d.status&&d.status===422?i.value=d.responseJSON.errors:console.error("Error submitting form:",d),console.error("Error in saveAllergies",i.value)}},I=async l=>{try{let t="Latex";s=(await V.get(`/get_step_id/${e.moduleId}/${e.componentId}/${l}/${t}`)).data.stepID,console.log("stepIDstepID",s)}catch{throw new Error("Failed to fetch stageID")}},y=async(l,t)=>{if(window.confirm("Are you sure you want to delete this Allergies?")){const o={id:l,uid:e.patientId,patient_id:e.patientId,module_id:e.moduleId,component_id:e.componentId,stage_id:e.stageId,step_id:s.value,form_name:"allergy_latex_form",billable:1,start_time:"00:00:00",end_time:"00:00:00",form_start_time:document.getElementById("page_landing_times").value};try{const u=await deleteAllergiesDetails(o);updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(u.form_start_time),await g(),document.getElementById("allergy_latex_form").reset(),setTimeout(()=>{c.value=document.getElementById("page_landing_times").value},3e3)}catch(u){console.error("Error deletting record:",u)}}},v=async l=>{try{const t=p.value.find(o=>o.id==l);if(console.log(t),t){const o=document.getElementById("allergy_latex_form");o.querySelector("#allergies_id").value=t.id,o.querySelector("#specify").value=t.specify,o.querySelector("#type_of_reactions").value=t.type_of_reactions,o.querySelector("#severity").value=t.severity,o.querySelector("#course_of_treatment").value=t.course_of_treatment,o.querySelector("#notes").value=t.notes,o.scrollIntoView({behavior:"smooth"})}}catch(t){console.error("Error editing allergies:",t)}};const S=()=>{window.deleteAllergies=y},N=()=>{window.editAllergy=v};return h(()=>e.stageId,(l,t)=>{I(l)}),h(()=>r,(l,t)=>{r.value=l}),k(()=>{g()}),T(async()=>{try{c.value=document.getElementById("page_landing_times").value,S(),N()}catch(l){console.error("Error on page load:",l)}}),{loading:f,submitAllergiesForm:A,latexallergiesStageId:m,latexallergiesStepId:s,formErrors:i,latexallergiesTime:c,showLatexAlert:r,latexAllergiescolumnDefs:_,latexAllergiesRowData:p,fetchPatientlatexList:g,deleteAllergies:y,editAllergy:v}}},P={class:"tab-pane fade show active",id:"latex",role:"tabpanel","aria-labelledby":"latex-allergies-icon-pill"},j={class:"card"},z=a("div",{class:"card-header"},[a("h4",null,"Latex")],-1),U=a("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1),H=a("strong",null," Latex Allergies data saved successfully! ",-1),J=a("span",{id:"text"},null,-1),W=[U,H,J],Q={class:"form-row col-md-12"},X=["value"],Y=["value"],Z=a("input",{type:"hidden",name:"start_time",value:"00:00:00"},null,-1),ee=a("input",{type:"hidden",name:"end_time",value:"00:00:00"},null,-1),te=["value"],ae=["value"],le=["value"],oe=["value"],re=w('<input type="hidden" name="form_name" value="allergy_latex_form"><input type="hidden" name="billable" value="1"><input type="hidden" name="allergy_type" value="latex"><input type="hidden" name="hid" class="hid" value="1"><input type="hidden" name="id" id="allergies_id">',5),se=["value"],ne=a("input",{type:"hidden",name:"noallergymsg",id:"noallergymsg",value:"No Known Latex Allergies"},null,-1),ie={class:"checkbox noAllergiesLbl",style:{"z-index":"1"}},de=a("div",{id:"msg",style:{color:"red",display:"none"}},"Please delete all data from below table to enable checkbox!",-1),me=a("span",{class:"checkmark"},null,-1),ue=["value"],ce=w('<div class="card-footer"><div class="mc-footer"><div class="row"><div class="col-lg-12 text-right"><button type="submit" class="btn btn-primary m-1" id="save_allergy_latex_form">Save</button></div></div></div></div><div class="alert alert-danger" id="danger-alert" style="display:none;"><button type="button" class="close" data-dismiss="alert">x</button><strong> Please Fill All mandatory Fields! </strong><span id="text"></span></div>',2),_e=a("div",{class:"separator-breadcrumb border-top"},null,-1),fe={class:"row"},pe={class:"col-12"};function ge(e,r,m,s,c,i){const f=x("latexForm"),p=x("AgGridTable");return F(),L("div",P,[a("div",j,[z,a("form",{id:"allergy_latex_form",name:"allergy_latex_form",onSubmit:r[2]||(r[2]=B((..._)=>s.submitAllergiesForm&&s.submitAllergiesForm(..._),["prevent"]))},[a("div",{class:"alert alert-success",style:R({display:s.showLatexAlert?"block":"none"})},W,4),a("div",Q,[a("input",{type:"hidden",name:"uid",value:m.patientId},null,8,X),a("input",{type:"hidden",name:"patient_id",value:m.patientId},null,8,Y),Z,ee,a("input",{type:"hidden",name:"module_id",value:m.moduleId},null,8,te),a("input",{type:"hidden",name:"component_id",value:m.componentId},null,8,ae),a("input",{type:"hidden",name:"stage_id",value:s.latexallergiesStageId},null,8,le),a("input",{type:"hidden",name:"step_id",value:s.latexallergiesStepId},null,8,oe),re,a("input",{type:"hidden",name:"timearr[form_start_time]",class:"timearr form_start_time",value:s.latexallergiesTime},null,8,se),ne,a("label",ie,[C(" No Known Latex Allergies "),M(a("input",{type:"checkbox","onUpdate:modelValue":r[0]||(r[0]=_=>c.allergyStatus=_),name:"allergy_status",onChange:r[1]||(r[1]=(..._)=>i.noAllergiesCheck&&i.noAllergiesCheck(..._)),style:{position:"absolute","z-index":"-1"}},null,544),[[q,c.allergyStatus]]),de,me]),a("input",{type:"hidden",id:"latexcount",value:i.latexAllergiesRowCount},null,8,ue),b(f,{formErrors:s.formErrors},null,8,["formErrors"])]),ce],32),_e,a("div",fe,[a("div",pe,[b(p,{rowData:s.latexAllergiesRowData,columnDefs:s.latexAllergiescolumnDefs},null,8,["rowData","columnDefs"])])])])])}const be=E(O,[["render",ge]]);export{be as default};
