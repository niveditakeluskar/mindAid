import{_ as N,l as n,H as h,G as E,m as x,r as b,o as k,e as T,b as a,q as F,I as B,k as C,i as M,M as q,f as w,N as A,d as V}from"./appInertia-bd981cc7.js";import G from"./AgGridTable-ef5374d2.js";import K from"./AllergiesShortForm-5982317e.js";import"./AgGridTable.vue_vue_type_style_index_0_lang-56c71005.js";const L={props:{patientId:Number,moduleId:Number,componentId:Number,stageId:Number},components:{PetRelatedForm:K,AgGridTable:G},data(){return{allergyStatus:!1,PetRelatedAllergiesRowData:[]}},computed:{PetRelatedAllergiesRowCount(){return this.PetRelatedAllergiesRowData.length}},methods:{hideShowNKDAMsg(e,o){var m=$("#"+e).val();m>0&&($("#"+o).show(),setTimeout(function(){$("#"+o).hide()},5e3))},noAllergiesCheck(){if(this.allergyStatus){$(".noallergiescheck").closest("form");var e="allergy_pet_related_form";this.hideShowNKDAMsg("drugcount","msg"),$("form[name='"+e+"'] input[name='specify']").val(""),$("form[name='"+e+"'] input[name='type_of_reactions']").val(""),$("form[name='"+e+"'] input[name='severity']").val(""),$("form[name='"+e+"'] input[name='course_of_treatment']").val(""),$("form[name='"+e+"'] textarea[name='notes']").val(""),$("form[name='"+e+"'] input[name='specify']").attr("disabled","disabled"),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!0),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!0),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!0),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!0)}else{$(".noallergiescheck").closest("form");var e="allergy_pet_related_form";$("form[name='"+e+"']")[0].reset(),$("form[name='"+e+"'] input[name='specify']").prop("disabled",!1),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!1),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!1),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!1),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!1)}}},setup(e){let o=n(!1),m=n(0),s=n(0),u=n(null),i=n([]);const p=n(!1),f=n([]);n(null),n(null),n(null);let _=n([{headerName:"Sr. No.",valueGetter:"node.rowIndex + 1",initialWidth:20},{headerName:"Specify",field:"specify",filter:!0},{headerName:"Type of Reactions",field:"type_of_reactions"},{headerName:"Severity",field:"severity"},{headerName:"Course of Treatment",field:"course_of_treatment"},{headerName:"Allergy Status",field:"allergy_status"},{headerName:"Last Modified By",field:"users.f_name",cellRenderer:function(l){const t=l.data;return t&&t.users&&t.users.f_name?t.users.f_name+" "+(t.users.l_name||""):"N/A"}},{headerName:"Last Modified On",field:"updated_at"},{headerName:"Action",field:"action",cellRenderer:function(l){const t=l.data;return t&&t.action?t.action:""}}]);const g=async()=>{try{p.value=!0,await new Promise(c=>setTimeout(c,2e3));const l=window.location.origin,t=await fetch(`${l}/ccm/allergies/${e.patientId}/petrelated`);if(!t.ok)throw new Error("Failed to fetch followup task list");p.value=!1;const r=await t.json();f.value=r.data}catch(l){console.error("Error fetching followup task list:",l),p.value=!1}},I=async()=>{i.value={};let l=document.getElementById("allergy_pet_related_form"),t=new FormData(l),r={};t.forEach((d,D)=>{r[D]=d});try{const d=await saveAllergies(r);console.log("in PetRelated saveAllergiesResponse",d),o.value=!0,updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(d.form_start_time),await g();var c=$("#allergy_pet_related_form")[0];c.reset(),$(c).find(":input").prop("disabled",!1),setTimeout(()=>{o.value=!1,u.value=document.getElementById("page_landing_times").value},3e3),i.value=[]}catch(d){d.status&&d.status===422?i.value=d.responseJSON.errors:console.error("Error submitting form:",d),console.error("Error in saveAllergies",i.value)}},R=async l=>{try{let t="petrelated";s=(await V.get(`/get_step_id/${e.moduleId}/${e.componentId}/${l}/${t}`)).data.stepID,console.log("stepIDstepID",s)}catch{throw new Error("Failed to fetch stageID")}},y=async(l,t)=>{if(window.confirm("Are you sure you want to delete this Allergies?")){const r={id:l,uid:e.patientId,patient_id:e.patientId,module_id:e.moduleId,component_id:e.componentId,stage_id:e.stageId,step_id:s.value,form_name:"allergy_pet_related_form",billable:1,start_time:"00:00:00",end_time:"00:00:00",form_start_time:document.getElementById("page_landing_times").value};try{const c=await deleteAllergiesDetails(r);updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(c.form_start_time),await g(),document.getElementById("allergy_pet_related_form").reset(),setTimeout(()=>{u.value=document.getElementById("page_landing_times").value},3e3)}catch(c){console.error("Error deletting record:",c)}}},v=async l=>{try{const t=f.value.find(r=>r.id==l);if(t){const r=document.getElementById("allergy_pet_related_form");r.querySelector("#allergies_id").value=t.id,r.querySelector("#specify").value=t.specify,r.querySelector("#type_of_reactions").value=t.type_of_reactions,r.querySelector("#severity").value=t.severity,r.querySelector("#course_of_treatment").value=t.course_of_treatment,r.querySelector("#notes").value=t.notes,r.scrollIntoView({behavior:"smooth"})}}catch(t){console.error("Error editing allergies:",t)}},S=()=>{window.deleteAllergies=y},P=()=>{window.editAllergy=v};return h(()=>e.stageId,(l,t)=>{R(l)}),h(()=>o,(l,t)=>{o.value=l}),E(()=>{g()}),x(async()=>{try{u.value=document.getElementById("page_landing_times").value,S(),P()}catch(l){console.error("Error on page load:",l)}}),{loading:p,submitAllergiesForm:I,petrelatedallergiesStageId:m,petrelatedallergiesStepId:s,formErrors:i,petrelatedallergiesTime:u,showPetRelatedAlert:o,PetRelatedAllergiescolumnDefs:_,PetRelatedAllergiesRowData:f,fetchPatientPetRelatedList:g,deleteAllergies:y,editAllergy:v}}},O={class:"tab-pane fade show active",id:"pet_related",role:"tabpanel","aria-labelledby":"pet-related-allergies-icon-pill"},j={class:"card"},z=a("div",{class:"card-header"},[a("h4",null,"Pet-Related Data")],-1),U=a("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1),H=a("strong",null," Pet-related Allergies data saved successfully! ",-1),J=a("span",{id:"text"},null,-1),W=[U,H,J],Q={class:"form-row col-md-12"},X=["value"],Y=["value"],Z=a("input",{type:"hidden",name:"start_time",value:"00:00:00"},null,-1),ee=a("input",{type:"hidden",name:"end_time",value:"00:00:00"},null,-1),te=["value"],ae=["value"],le=["value"],re=["value"],oe=A('<input type="hidden" name="form_name" value="allergy_pet_related_form"><input type="hidden" name="billable" value="1"><input type="hidden" name="allergy_type" value="petrelated"><input type="hidden" name="hid" class="hid" value="1"><input type="hidden" name="id" id="allergies_id">',5),se=["value"],ne=a("input",{type:"hidden",name:"noallergymsg",id:"noallergymsg",value:"No Known Pet-Related Allergies"},null,-1),ie={class:"checkbox noAllergiesLbl",style:{"z-index":"1"}},de=a("div",{id:"msg",style:{color:"red",display:"none"}},"Please delete all data from below table to enable checkbox!",-1),me=a("span",{class:"checkmark"},null,-1),ce=["value"],ue=A('<div class="card-footer"><div class="mc-footer"><div class="row"><div class="col-lg-12 text-right"><button type="submit" class="btn btn-primary m-1" id="save_allergy_pet_related_form">Save</button></div></div></div></div><div class="alert alert-danger" id="danger-alert" style="display:none;"><button type="button" class="close" data-dismiss="alert">x</button><strong> Please Fill All mandatory Fields! </strong><span id="text"></span></div>',2),_e=a("div",{class:"separator-breadcrumb border-top"},null,-1),pe={class:"row"},fe={class:"col-12"};function ge(e,o,m,s,u,i){const p=b("PetRelatedForm"),f=b("AgGridTable");return k(),T("div",O,[a("div",j,[z,a("form",{id:"allergy_pet_related_form",name:"allergy_pet_related_form",onSubmit:o[2]||(o[2]=F((..._)=>s.submitAllergiesForm&&s.submitAllergiesForm(..._),["prevent"]))},[a("div",{class:"alert alert-success",style:B({display:s.showPetRelatedAlert?"block":"none"})},W,4),a("div",Q,[a("input",{type:"hidden",name:"uid",value:m.patientId},null,8,X),a("input",{type:"hidden",name:"patient_id",value:m.patientId},null,8,Y),Z,ee,a("input",{type:"hidden",name:"module_id",value:m.moduleId},null,8,te),a("input",{type:"hidden",name:"component_id",value:m.componentId},null,8,ae),a("input",{type:"hidden",name:"stage_id",value:s.petrelatedallergiesStageId},null,8,le),a("input",{type:"hidden",name:"step_id",value:s.petrelatedallergiesStepId},null,8,re),oe,a("input",{type:"hidden",name:"timearr[form_start_time]",class:"timearr form_start_time",value:s.petrelatedallergiesTime},null,8,se),ne,a("label",ie,[C(" No Known Pet-Related Allergies "),M(a("input",{type:"checkbox","onUpdate:modelValue":o[0]||(o[0]=_=>u.allergyStatus=_),name:"allergy_status",onChange:o[1]||(o[1]=(..._)=>i.noAllergiesCheck&&i.noAllergiesCheck(..._)),style:{position:"absolute","z-index":"-1"}},null,544),[[q,u.allergyStatus]]),de,me]),a("input",{type:"hidden",id:"PetRelatedcount",value:i.PetRelatedAllergiesRowCount},null,8,ce),w(p,{formErrors:s.formErrors},null,8,["formErrors"])]),ue],32),_e,a("div",pe,[a("div",fe,[w(f,{rowData:s.PetRelatedAllergiesRowData,columnDefs:s.PetRelatedAllergiescolumnDefs},null,8,["rowData","columnDefs"])])])])])}const we=N(L,[["render",ge]]);export{we as default};
