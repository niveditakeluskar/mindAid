import{_ as Ee,l as c,P as Te,r as ae,o as _,e as p,b as e,n as ne,f as le,q as Pe,h as K,i as w,s as C,v as ie,F as T,j as A,t as q,d as P,Q as Ae,p as Fe,a as Me,k as g}from"./appInertia-bd981cc7.js";import Oe from"./AgGridTable-ef5374d2.js";import"./AgGridTable.vue_vue_type_style_index_0_lang-56c71005.js";const Ve={props:{patientId:Number,moduleId:Number,componentId:Number},components:{AgGridTable:Oe},setup(m){const i=c(null),b=c(!0),o=c(""),F=c(""),M=c({}),x=c(!1),v=c(!1),a=c([]),l=c([]),u=c([]),X=c(!1),Q=c(!1),Y=c(!1),de=c(""),I=c(""),O=c(""),H=c([]),V=c(!1);let W=c([]),L=c([]),re=c("");const Z=c(""),N=c(""),U=c(!1),ce=()=>{U.value=!0,R(),he(),ge(),ye(),j(),J(),z();const t=document.getElementById("page_landing_times").value;t!==null&&(G.value=t.value)},me=()=>{U.value=!1};let ue=c([{headerName:"Sr. No.",valueGetter:"node.rowIndex + 1"},{headerName:"Code",field:"code"},{headerName:"Condition",field:"condition"},{headerName:"Last Modified By",field:"users.f_name"},{headerName:"Last Modified On",field:"updated_at"},{headerName:"Last Review Date",field:"updated_at"},{headerName:"Last Updated On",field:"update_date"},{headerName:"Action",field:"action",cellRenderer:t=>{const d=document.createElement("div"),r=document.createElement("i"),s=document.createElement("i"),{data:h}=t;let y="black",k="red";h.iconcolor==="green"?y="green":h.iconcolor==="yellow"&&(y="yellow"),r.classList.add("text-20","i-Closee","i-Data-Yes"),r.style.color=y;const f=document.createTextNode(" ");return s.classList.add("text-20","i-Close"),s.style.color=k,d.appendChild(r),d.appendChild(f),d.appendChild(s),d.classList.add("ActiveDeactiveClass"),d.style.cursor="pointer",d.addEventListener("click",S=>{S.target===r?te(h.id,S.target):S.target===s&&_e(h.id,S.target)}),d}}]),G=c(null),B=c(0),ee=c(0);const te=async t=>{D(),v.value=!0;try{Z.value=t;const d=await fetch(`/ccm/diagnosis-select/${t}/${m.patientId}`);if(!d.ok)throw new Error("Failed to fetch followup task list");const s=(await d.json()).care_plan_form.static;s&&s.goals&&(a.value=JSON.parse(s.goals)),o.value=s.diagnosis,I.value=s.diagnosis,O.value=s.code,N.value=s.condition,F.value=s.comments,s&&s.tasks&&(l.value=JSON.parse(s.tasks)),s&&s.symptoms&&(u.value=JSON.parse(s.symptoms)),v.value=!1,b.value=!1}catch(d){console.error("Error fetching CPD list:",d),v.value=!1}},_e=async t=>{const d=m.moduleId,r=m.componentId,s=m.patientId,h=document.querySelector("form[name='care_plan_form'] input[name='stage_id']").value,y=document.querySelector("form[name='care_plan_form'] input[name='step_id']").value,k=document.querySelector("form[name='care_plan_form'] input[name='form_name']").value,f=i.value.value,S=document.getElementById("time-container").textContent,Ie=document.querySelector("form[name='care_plan_form'] input[name='billable']").value,De=document.querySelector("form[name='care_plan_form'] .form_start_time").value;if(confirm("Are you sure you want to delete the Condition"))try{const E=await fetch("/ccm/delete-care-plan",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content},body:new URLSearchParams({id:t,start_time:f,end_time:S,module_id:d,component_id:r,patient_id:s,stage_id:h,step_id:y,form_name:k,billable:Ie,form_start_time:De})});if(!E.ok)throw new Error(`Failed to delete care plan - ${E.status} ${E.statusText}`);const Se=await E.json();D(),$("#reviewCareAlert").html('<div class="alert alert-success">Deleted Successfully</div>'),R(),updateTimer(m.patientId,"1",m.moduleId),document.querySelector(".form_start_time").value=Se.form_start_time}catch(E){console.error("Error deleting care plan:",E.message)}},R=async()=>{try{V.value=!0;const t=await fetch(`/ccm/care-plan-development-diagnosis-diagnosislist/${m.patientId}`);if(!t.ok)throw new Error("Failed to fetch followup task list");V.value=!1;const d=await t.json();d.data?H.value=d.data:console.error("Data is undefined in the response:",d)}catch(t){console.error("Error fetching followup task list:",t),V.value=!1}},pe=async()=>{v.value=!0;let t=document.getElementById("care_plan_form"),d=new FormData(t);P.defaults.headers.common["X-CSRF-TOKEN"]=document.querySelector('meta[name="csrf-token"]').content;try{const r=await P.post("/ccm/care-plan-development-diagnosis-save",d);r&&r.status==200&&(D(),O.value="",I.value="",F.value="",$("#reviewCareAlert").html('<div class="alert alert-success"> Data Saved Successfully </div>'),document.getElementById("care_plan_form").reset(),R(),updateTimer(m.patientId,"1",m.moduleId),$(".form_start_time").val(r.data.form_start_time),G.value=document.getElementById("page_landing_times").value,setTimeout(()=>{$("#reviewCareAlert").html("")},3e3)),v.value=!1}catch(r){v.value=!1,r.response&&r.response.status===422?(M.value=r.response.data.errors,setTimeout(function(){M.value={}},3e3)):console.error("Error submitting form:",r),v.value=!1}},ve=()=>{D(),Ae(()=>{j(),J(),z(),b.value=!1})},fe=()=>{alert("Are you sure you want to change the code?"),I.value===""&&alert("please selecte condition!")};let he=async()=>{try{await new Promise(s=>setTimeout(s,2e3));const t=await fetch("/ccm/diagnosis-conditions");if(!t.ok)throw new Error("Failed to fetch diagnosis list");const d=await t.json(),r=Object.entries(d).map(([s,h])=>({id:s,description:h}));W.value=r}catch(t){console.error("Error fetching diagnosis list:",t)}};const oe=async()=>{try{const t=await fetch(`/ccm/get_diagnosis_all_codes/${I.value}/get_diagnosis_all_codes`);if(!t.ok)throw new Error(`Failed to fetch Patient Preaparation - ${t.status} ${t.statusText}`);const d=await t.json();L.value=d.map(r=>r.code)}catch(t){console.error("Error fetching Code:",t)}};let ge=async()=>{try{await new Promise(r=>setTimeout(r,2e3));const t=await fetch("/ccm/activediagnosis-code");if(!t.ok)throw new Error("Failed to fetch code list");const d=await t.json();Array.isArray(d)&&(L.value=d.map(r=>r.code))}catch(t){console.error("Error fetching code list:",t)}},ye=async()=>{try{let t="Preparation";B=(await P.get(`/get_stage_id/${m.moduleId}/${m.componentId}/${t}`)).data.stageID,be(B)}catch{throw new Error("Failed to fetch Patient Data stageID")}},be=async t=>{try{let d="Care Plan";ee=(await P.get(`/get_step_id/${m.moduleId}/${m.componentId}/${t}/${d}`)).data.stepID}catch{throw new Error("Failed to fetch stageID")}};const se=(t,d,r,s,h)=>{t&&P({method:"GET",url:`/org/ajax/diagnosis/${t}/${h}/${d}/${r}/editpatientdiagnosisId`}).then(y=>{y.data>0?($("form[name='"+s+"'] #hiddenenablebutton").val(0),$("form[name='"+s+"'] #symptoms_0").prop("disabled",!0),$("form[name='"+s+"'] #goals_0").prop("disabled",!0),$("form[name='"+s+"'] #tasks_0").prop("disabled",!0),$("form[name='"+s+"']  .symptoms ").prop("disabled",!0),$("form[name='"+s+"']  .goals ").prop("disabled",!0),$("form[name='"+s+"']  .tasks  ").prop("disabled",!0),$("form[name='"+s+"']  #append_symptoms_icons  ").hide(),$("form[name='"+s+"']  #append_goals_icons  ").hide(),$("form[name='"+s+"']  #append_tasks_icons  ").hide(),$("form[name='"+s+"']  .removegoals  ").hide(),$("form[name='"+s+"']  .removesymptoms  ").hide(),$("form[name='"+s+"']  .removetasks  ").hide()):($("form[name='"+s+"'] #hiddenenablebutton").val(1),$("form[name='"+s+"'] #symptoms_0").prop("disabled",!1),$("form[name='"+s+"'] #symptoms_0").prop("disabled",!1),$("form[name='"+s+"'] #goals_0").prop("disabled",!1),$("form[name='"+s+"'] #tasks_0").prop("disabled",!1),$("form[name='"+s+"']  .symptoms ").prop("disabled",!1),$("form[name='"+s+"']  .goals ").prop("disabled",!1),$("form[name='"+s+"']  .tasks  ").prop("disabled",!1),$("form[name='"+s+"']  #append_symptoms_icons  ").show(),$("form[name='"+s+"']  #append_goals_icons  ").show(),$("form[name='"+s+"']  #append_tasks_icons  ").show(),$("form[name='"+s+"']  .removegoals  ").show(),$("form[name='"+s+"']  .removesymptoms  ").show(),$("form[name='"+s+"']  .removetasks  ").show())}).catch(y=>{console.error(y,y.response)})},j=()=>{a.value.length>0&&a.value[0].trim()!==""&&(X.value=!0),a.value.push("")},we=t=>{a.value.splice(t,1)},D=()=>{a.value=[],l.value=[],u.value=[]};Te(()=>{a.value=a.value.filter(t=>t.trim()!==""),u.value=u.value.filter(t=>t.trim()!==""),l.value=l.value.filter(t=>t.trim()!=="")});const J=()=>{u.value.length>0&&u.value[0].trim()!==""&&(Y.value=!0),u.value.push("")},ke=t=>{u.value.splice(t,1)},Ce=()=>{u.value=[]},z=()=>{l.value.length>0&&l.value[0].trim()!==""&&(Q.value=!0),l.value.push("")};return{openModal:ce,closeModal:me,isOpen:U,getCodeData:oe,isSaveButtonDisabled:b,selectedDiagnosisId:o,comments:F,selectedCode:O,loading:V,columnDefs:ue,passRowData:H,diagnosisOptions:W,codeOptions:L,selectedMedication:re,reviewCarePlanTimer:G,reviewCarePlanStageId:B,selectedDiagnosis:I,handleDiagnosisChange:ve,handleCodeAlert:fe,formErrors:M,stepID:ee,goals:a,tasks:l,symptoms:u,isInitialGoalFilled:X,isInitialTaskFilled:Q,isInitialSymptomFilled:Y,goalsText:de,submitCarePlanForm:pe,fetchCarePlanFormList:R,getDiagnosisIdfromPatientdiagnosisid:se,changeCondition:t=>{if(v.value=!0,typeof t!="string"){console.error("Invalid formName:",t),v.value=!1;return}$("form[name='"+t+"'] #editdiagnoid").val();var d=$("form[name='"+t+"'] #editdiagnoid").val();$("form[name='diagnosis_code_form'] #editdiagnoid").val(d),$("form[name='care_plan_form'] #editdiagnoid").val(d);let r=m.patientId;var s=I.value,h=$("form[name='"+t+"'] #diagnosis_condition option:selected").text(),y=$("form[name='"+t+"'] #diagnosis_code").val();oe(),se(d,h,y,t,r),$("form[name='"+t+"'] input[name='condition']").val(h),$("form[name='"+t+"'] #diagnosis_code").val(""),$("form[name='"+t+"'] #append_symptoms").html(""),$("form[name='"+t+"'] #append_goals").html(""),$("form[name='"+t+"'] #append_tasks").html(""),$("form[name='"+t+"'] #symptoms_0").val(""),$("form[name='"+t+"'] #goals_0").val(""),$("form[name='"+t+"'] #tasks_0").val(""),$("form[name='"+t+"'] #support").val(""),$("form[name='"+t+"'] textarea[name='comments']").val(""),$("form[name='"+t+"'] textarea[name='comments']").text(""),typeof s=="string"&&s.trim().length===0?(v.value=!1,alert("Please select Condition options")):P({method:"GET",url:`/ccm/get-all-code-by-id/${s}/${m.patientId}/diagnosis`}).then(k=>{D();const f=k.data.care_plan_form.static;O.value=f.code,f&&f.goals&&(a.value=JSON.parse(f.goals)),f&&f.tasks&&(l.value=JSON.parse(f.tasks)),f&&f.symptoms&&(u.value=JSON.parse(f.symptoms)),v.value=!1}).catch(k=>{console.error(k,k.response)}),s==null||s==""||s==""?(b.value=!0,$("form[name='"+t+"'] #save_diagnosis_form").prop("disabled",!0)):(b.value=!1,$("form[name='"+t+"'] #save_diagnosis_form").prop("disabled",!1))},additionalgoals:j,additionaltasks:z,additionalsymptoms:J,removeGoal:we,clearGoals:D,removeTasks:t=>{l.value.splice(t,1)},clearTasks:()=>{l.value=[]},removeSymptoms:ke,clearSymptoms:Ce,isLoading:v,showSuccessAlert:x,selectedEditDiagnosId:Z,editPatientDignosis:te,selectedcondition:N,startTimeInput:i}}},n=m=>(Fe("data-v-33d63ab0"),m=m(),Me(),m),$e={class:"modal-content"},Re={class:"modal-header"},qe=n(()=>e("h4",{class:"modal-title"},"Create / Modify Care Plan",-1)),xe={class:"modal-body",style:{"padding-top":"10px"}},Le={class:"row mb-4"},Ue={class:"col-md-12"},Ge={class:"row"},Be={class:"col-md-12"},je={class:"form-group ccmPatientData",id:"diagnosis-codes",name:"diagnosis_codes",style:{}},Je={class:"row mb-4",id:"diagnosis"},ze={class:"col-md-12 mb-4"},Ke=n(()=>e("div",{class:"success",id:"success"},null,-1)),Xe={class:"card-body diagnosis-Data"},Qe={class:"row mb-4"},Ye={class:"col-md-12 mb-4"},He=n(()=>e("ul",{class:"nav nav-pills",id:"myPillTab",role:"tablist"},[e("li",{class:"nav-item"})],-1)),We={class:"tab-content",id:"myPillTabContent"},Ze={class:"tab-pane fade show active",id:"diagnosis",role:"tabpanel","aria-labelledby":"diagnosis-icon-pill"},Ne={class:"card mb-4"},et=n(()=>e("div",{id:"reviewCareAlert"},null,-1)),tt={key:0,class:"alert alert-danger"},ot=n(()=>e("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1)),st=n(()=>e("strong",null," Fill All Mandatory Fields! ",-1)),at=n(()=>e("span",{id:"text"},null,-1)),nt=[ot,st,at],lt={class:"form-row col-md-12"},it=["value"],dt=["value"],rt={type:"hidden",name:"start_time",ref:"startTimeInput",value:"00:00:00"},ct=n(()=>e("input",{type:"hidden",name:"end_time",value:"00:00:00"},null,-1)),mt=["value"],ut=["value"],_t=n(()=>e("input",{type:"hidden",name:"stage_id",value:"11"},null,-1)),pt=["value"],vt=n(()=>e("input",{type:"hidden",name:"form_name",value:"care_plan_form"},null,-1)),ft=n(()=>e("input",{type:"hidden",name:"hiddenenablebutton",id:"hiddenenablebutton"},null,-1)),ht=n(()=>e("input",{type:"hidden",id:"cpd_finalize",value:"1"},null,-1)),gt=n(()=>e("input",{type:"hidden",name:"billable",value:"1"},null,-1)),yt={class:"row col-md-12"},bt={class:"col-md-6"},wt=n(()=>e("label",null,[g("Condition "),e("span",{class:"error"},"*"),g(":")],-1)),kt=["value"],Ct={key:0,class:"invalid-feedback",style:{display:"block"}},It={class:"col-md-2"},Dt=n(()=>e("label",null,[e("span",{class:"error"}),g("  ")],-1)),St={class:"col-md-4 emaillist"},Et=n(()=>e("label",null,[g("Code"),e("span",{class:"error"},"*"),g(" :")],-1)),Tt=n(()=>e("input",{type:"hidden",id:"codeid"},null,-1)),Pt=n(()=>e("option",{value:""},"Select Code ",-1)),At=["value"],Ft={key:0,class:"invalid-feedback",style:{display:"block"}},Mt=n(()=>e("div",{class:"col-md-3 otherlist",id:"otherlist",style:{display:"none"}},[e("label",null,[g("New Code "),e("span",{class:"error"},"*"),g(":")]),e("input",{id:"new_code",class:"form-control",name:"new_code",type:"text",value:"",autocomplete:"off"}),e("div",{class:"invalid-feedback"})],-1)),Ot=n(()=>e("div",null,[e("button",{type:"button",class:"btn btn-primary mt-2 ml-3",id:"enable_diagnosis_button",onclick:"carePlanDevelopment.enableDiagnosisbutton(this)",style:{display:"none"}},"Enable Editing"),e("button",{type:"button",class:"btn btn-primary mt-2 ml-3",id:"disable_diagnosis_button",onclick:"carePlanDevelopment.disableDiagnosisbutton(this)",style:{display:"none"}},"Disable Editing")],-1)),Vt={class:"col-md-12"},$t=n(()=>e("label",{for:"Template"},[g("Symptoms"),e("span",{class:"error"},"*"),g(" :")],-1)),Rt=["onUpdate:modelValue","id","required"],qt=["onClick","id"],xt=n(()=>e("div",{class:"invalid-feedback"},null,-1)),Lt=n(()=>e("div",{class:"col-md-10 mb-3",id:"append_symptoms"},null,-1)),Ut={class:"col-md-12"},Gt=n(()=>e("label",{for:"contactNumber"},[g("Goals"),e("span",{class:"error"},"*"),g(" :")],-1)),Bt=["onUpdate:modelValue","id","required"],jt=["onClick","id"],Jt=n(()=>e("div",{class:"invalid-feedback"},null,-1)),zt=n(()=>e("div",{class:"col-md-10 mb-3",id:"append_goals"},null,-1)),Kt={class:"col-md-12"},Xt=n(()=>e("label",{for:"emailTo"},[g("Tasks"),e("span",{class:"error"},"*"),g(" :")],-1)),Qt=["onUpdate:modelValue","id","required"],Yt=["onClick","id"],Ht=n(()=>e("div",{class:"invalid-feedback"},null,-1)),Wt=n(()=>e("div",{class:"col-md-10 mb-3",id:"append_tasks"},null,-1)),Zt={class:"col-md-12"},Nt=n(()=>e("label",{for:"Template"},"Comment:",-1)),eo=n(()=>e("div",{class:"invalid-feedback"},null,-1)),to=n(()=>e("br",null,null,-1)),oo=n(()=>e("div",{class:"alert alert-danger",style:{display:"none"}},[e("button",{type:"button",class:"close","data-dismiss":"alert"},"x"),e("strong",null," Fill All Mandatory Fields! "),e("span",{id:"text"})],-1)),so={class:"col-md-12"},ao=["disabled"],no=["value"],lo=n(()=>e("input",{type:"hidden",name:"timearr['form_save_time']",class:"form_save_time"},null,-1)),io=n(()=>e("input",{type:"hidden",name:"timearr['pause_start_time']"},null,-1)),ro=n(()=>e("input",{type:"hidden",name:"timearr['pause_end_time']"},null,-1)),co=n(()=>e("input",{type:"hidden",name:"timearr['extra_time']"},null,-1)),mo=n(()=>e("div",{id:"reviewCareAlert"},null,-1)),uo=n(()=>e("div",{class:"separator-breadcrumb border-top"},null,-1)),_o={class:"row"},po={class:"col-md-12"},vo={class:"modal-footer"};function fo(m,i,b,o,F,M){const x=ae("loading-spinner"),v=ae("AgGridTable");return _(),p(T,null,[e("div",{class:ne(["overlay",{open:o.isOpen}]),onClick:i[0]||(i[0]=(...a)=>o.closeModal&&o.closeModal(...a))},null,2),e("div",{class:ne(["modal fade",{open:o.isOpen}])},[e("div",$e,[e("div",Re,[qe,e("button",{type:"button",class:"close","data-dismiss":"modal",onClick:i[1]||(i[1]=(...a)=>o.closeModal&&o.closeModal(...a))},"×")]),e("div",xe,[le(x,{isLoading:o.isLoading},null,8,["isLoading"]),e("div",Le,[e("div",Ue,[e("div",Ge,[e("div",Be,[e("div",je,[e("div",Je,[e("div",ze,[Ke,e("div",Xe,[e("div",Qe,[e("div",Ye,[He,e("div",We,[e("div",Ze,[e("div",Ne,[et,e("form",{id:"care_plan_form",name:"care_plan_form",onSubmit:i[15]||(i[15]=Pe((...a)=>o.submitCarePlanForm&&o.submitCarePlanForm(...a),["prevent"]))},[o.showSuccessAlert?(_(),p("div",tt,nt)):K("",!0),e("div",lt,[e("input",{type:"hidden",name:"uid",value:b.patientId},null,8,it),e("input",{type:"hidden",name:"patient_id",value:b.patientId},null,8,dt),e("input",rt,null,512),ct,e("input",{type:"hidden",name:"module_id",value:b.moduleId},null,8,mt),e("input",{type:"hidden",name:"component_id",value:b.componentId},null,8,ut),_t,e("input",{type:"hidden",name:"step_id",value:o.stepID},null,8,pt),vt,w(e("input",{type:"hidden",name:"diagnosis_id",id:"diagnosis_id","onUpdate:modelValue":i[2]||(i[2]=a=>o.selectedDiagnosisId=a)},null,512),[[C,o.selectedDiagnosisId]]),ft,w(e("input",{type:"hidden",name:"editdiagnoid","onUpdate:modelValue":i[3]||(i[3]=a=>o.selectedEditDiagnosId=a)},null,512),[[C,o.selectedEditDiagnosId]]),ht,gt,e("div",yt,[e("div",bt,[wt,w(e("input",{type:"hidden",name:"condition","onUpdate:modelValue":i[4]||(i[4]=a=>o.selectedcondition=a)},null,512),[[C,o.selectedcondition]]),w(e("select",{id:"diagnosis_condition",class:"custom-select show-tick",name:"diagnosis","onUpdate:modelValue":i[5]||(i[5]=a=>o.selectedDiagnosis=a),onChange:i[6]||(i[6]=(...a)=>o.handleDiagnosisChange&&o.handleDiagnosisChange(...a))},[(_(!0),p(T,null,A(o.diagnosisOptions,a=>(_(),p("option",{key:a.id,value:a.id},q(a.description),9,kt))),128))],544),[[ie,o.selectedDiagnosis]]),o.formErrors.diagnosis?(_(),p("div",Ct,q(o.formErrors.diagnosis[0]),1)):K("",!0)]),e("div",It,[Dt,e("button",{type:"button",class:"col-md-12 btn btn-primary",onClick:i[7]||(i[7]=()=>o.changeCondition("care_plan_form")),id:"render_plan_form"}," Display Care Plan")]),e("div",St,[Et,Tt,w(e("select",{id:"diagnosis_code",class:"custom-select show-tick",name:"code","onUpdate:modelValue":i[8]||(i[8]=a=>o.selectedCode=a),onChange:i[9]||(i[9]=(...a)=>o.handleCodeAlert&&o.handleCodeAlert(...a))},[Pt,(_(!0),p(T,null,A(o.codeOptions,a=>(_(),p("option",{key:a,value:a},q(a),9,At))),128))],544),[[ie,o.selectedCode]]),o.formErrors.code?(_(),p("div",Ft,q(o.formErrors.code[0]),1)):K("",!0)]),Mt,Ot,e("div",Vt,[$t,(_(!0),p(T,null,A(o.symptoms,(a,l)=>(_(),p("div",{key:l,class:"goal-container"},[w((_(),p("input",{key:l,"onUpdate:modelValue":u=>o.symptoms[l]=u,placeholder:"Enter Symptoms",id:"symptoms_"+l,class:"form-control",name:"symptoms[]",type:"text",autocomplete:"off",required:l===0?!o.isInitialSymptomFilled:!1},null,8,Rt)),[[C,o.symptoms[l]]]),e("i",{class:"col-md-1 remove-icons i-Remove float-right mb-3",onClick:u=>o.removeSymptoms(l),id:"remove_symptoms_"+l,title:"Remove Symptoms"},null,8,qt)]))),128)),xt,e("i",{class:"plus-icons i-Add",id:"append_symptoms_icons",onClick:i[10]||(i[10]=a=>o.additionalsymptoms()),title:"Add symptons"}),Lt]),e("div",Ut,[Gt,(_(!0),p(T,null,A(o.goals,(a,l)=>(_(),p("div",{key:l,class:"goal-container"},[w((_(),p("input",{key:l,"onUpdate:modelValue":u=>o.goals[l]=u,placeholder:"Enter Goal",id:"goals_"+l,class:"form-control",name:"goals[]",type:"text",autocomplete:"off",required:l===0?!o.isInitialGoalFilled:!1},null,8,Bt)),[[C,o.goals[l]]]),e("i",{class:"col-md-1 remove-icons i-Remove float-right mb-3",onClick:u=>o.removeGoal(l),id:"remove_goal_"+l,title:"Remove Goal"},null,8,jt)]))),128)),e("i",{class:"plus-icons i-Add",id:"append_goals_icons",onClick:i[11]||(i[11]=a=>o.additionalgoals()),title:"Add goals"}),Jt,zt]),e("div",Kt,[Xt,(_(!0),p(T,null,A(o.tasks,(a,l)=>(_(),p("div",{key:l,class:"goal-container"},[w((_(),p("textarea",{key:l,"onUpdate:modelValue":u=>o.tasks[l]=u,placeholder:"Enter tasks",id:"tasks_"+l,class:"form-control",name:"tasks[]",type:"text",style:{height:"50px","overflow-y":"hidden"},required:l===0?!o.isInitialTaskFilled:!1},null,8,Qt)),[[C,o.tasks[l]]]),e("i",{class:"col-md-1 remove-icons i-Remove float-right mb-3",onClick:u=>o.removeTasks(l),id:"remove_tasks_"+l,title:"Remove Task"},null,8,Yt)]))),128)),Ht,e("i",{class:"plus-icons i-Add",id:"append_tasks_icons",onClick:i[12]||(i[12]=a=>o.additionaltasks()),title:"Add task"}),Wt]),e("div",Zt,[Nt,w(e("textarea",{class:"forms-element form-control",id:"diagnosis_comments","onUpdate:modelValue":i[13]||(i[13]=a=>o.comments=a),name:"comments",style:{height:"50px","overflow-y":"hidden"}},null,512),[[C,o.comments]]),eo])])]),to,oo,e("div",so,[e("button",{type:"submit",class:"btn btn-primary float-right save_care_plan_form",id:"save_care_plan_form",disabled:o.isSaveButtonDisabled},"Review/Save",8,ao)]),w(e("input",{type:"hidden",name:"timearr[form_start_time]",class:"timearr form_start_time",value:o.reviewCarePlanTimer,"onUpdate:modelValue":i[14]||(i[14]=a=>o.reviewCarePlanTimer=a)},null,8,no),[[C,o.reviewCarePlanTimer]]),lo,io,ro,co],32),mo])])])])])])])])])])])])]),uo,e("div",_o,[e("div",po,[le(v,{rowData:o.passRowData,columnDefs:o.columnDefs},null,8,["rowData","columnDefs"])])])]),e("div",vo,[e("button",{type:"button",class:"btn btn-default","data-dismiss":"modal",onClick:i[16]||(i[16]=(...a)=>o.closeModal&&o.closeModal(...a))},"Close")])])],2)],64)}const Io=Ee(Ve,[["render",fo],["__scopeId","data-v-33d63ab0"]]);export{Io as default};
