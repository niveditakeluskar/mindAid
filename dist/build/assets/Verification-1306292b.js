import{_ as l,d as a,o as n,e as d,b as t,q as m,I as p,i as _,R as u,t as h,h as f,k as c}from"./appInertia-bd981cc7.js";const v={props:{patientId:Number,moduleId:Number,componentId:Number},data(){return{uid:"",patient_id:"",module_id:"",component_id:"",stageId:0,stepId:0,start_time:"",end_time:"",form_name:"",billable:"",verification:"",formErrors:{},showAlert:!1,timerStatus:null}},mounted(){this.getStageID(),this.populateFuntion(),this.timerStatus=document.getElementById("timer_runing_status").value},methods:{async getStageID(){try{let s=await a.get(`/get_stage_id/${this.moduleId}/${this.componentId}/Hippa`);this.stageId=s.data.stageID}catch{throw new Error("Failed to fetch stageID")}},async populateFuntion(){try{const s=await fetch(`/ccm/populate-monthly-monitoring-data/${this.patientId}`);if(!s.ok)throw new Error(`Failed to fetch Patient Preaparation - ${s.status} ${s.statusText}`);const e=await s.json();this.patientPrepSaveDetails=e,this.patientPrepSaveDetails.populateHippa!=""&&(this.verification=this.patientPrepSaveDetails.populateHippa.static.verification)}catch(s){console.error("Error fetching Patient Preaparation:",s.message)}},async submitVerificationForm(){const s={uid:this.patientId,patient_id:this.patientId,module_id:this.moduleId,component_id:this.componentId,stage_id:this.stageId,step_id:this.stepId,form_name:"hippa_form",billable:1,start_time:"",end_time:"",verification:this.verification,_token:document.querySelector('meta[name="csrf-token"]').content,timearr:{form_start_time:document.getElementById("page_landing_times").value,form_save_time:"",pause_start_time:"",pause_end_time:"",extra_time:""}};a.defaults.headers.common["X-CSRF-TOKEN"]=document.querySelector('meta[name="csrf-token"]').content;try{this.formErrors={};const e=await a.post("/ccm/monthly-monitoring-call-hippa",s);e&&e.status==200&&(this.showAlert=!0,this.$emit("updateverification"),updateTimer(this.patientId,1,this.moduleId),$(".form_start_time").val(e.data.form_start_time),setTimeout(()=>{this.showAlert=!1},3e3),this.$emit("form-submitted"))}catch(e){e.response&&e.response.status===422?this.formErrors=e.response.data.errors:console.error("Error submitting form:",e)}}}},b={class:"row"},g={class:"col-lg-12 mb-3"},y={class:"card"},I={class:"card-body"},w={class:"row"},S={class:"col-md-12"},k=t("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1),E=t("strong",null," Hippa data saved successfully! ",-1),x=t("span",{id:"text"},null,-1),A=[k,E,x],D=t("p",{class:"mb-4"},[t("b",null,"Verify HIPAA script"),t("br"),c(" Before we get started, to comply with HIPAA guidelines I need to verify your date of birth and your address.")],-1),P={class:"forms-element form-group d-inline-flex mb-2"},V={class:"radio radio-primary mr-4",for:"verification"},N=["checked"],F=t("span",null,[c("HIPAA Verified"),t("span",{class:"error"},"*")],-1),H=t("span",{class:"checkmark"},null,-1),B={key:0,class:"invalid-feedback",style:{display:"block"}},T={class:"card-footer"},q={class:"mc-footer"},C={class:"row"},R={class:"col-lg-12 text-right"},M=["disabled"];function j(s,e,z,K,i,r){return n(),d("div",b,[t("div",g,[t("div",y,[t("form",{id:"hippa_form",name:"hippa_form",onSubmit:e[1]||(e[1]=m((...o)=>r.submitVerificationForm&&r.submitVerificationForm(...o),["prevent"]))},[t("div",I,[t("div",w,[t("div",S,[t("div",{class:"alert alert-success",style:p({display:i.showAlert?"block":"none"}),id:"hippa-success-alert"},A,4),D,t("div",P,[t("label",V,[_(t("input",{type:"radio",name:"verification",id:"verification",value:"1",formControlName:"radio","onUpdate:modelValue":e[0]||(e[0]=o=>i.verification=o),checked:i.verification=="1"},null,8,N),[[u,i.verification]]),F,H])]),i.formErrors.verification?(n(),d("div",B,h(i.formErrors.verification[0]),1)):f("",!0)])])]),t("div",T,[t("div",q,[t("div",C,[t("div",R,[t("button",{type:"submit",class:"btn btn-primary m-1",id:"save-hippa",disabled:i.timerStatus==1},"Next",8,M)])])])])],32)])])])}const U=l(v,[["render",j]]);export{U as default};
