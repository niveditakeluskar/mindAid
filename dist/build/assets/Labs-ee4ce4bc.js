import{_ as X,l as s,H as R,G as U,m as z,r as J,o as b,e as h,b as a,q as W,I as Q,i as Y,v as Z,F as ee,j as ae,t as y,h as x,s as te,f as oe,d as _,k as w,N as le}from"./appInertia-bd981cc7.js";import ne from"./AgGridTable-ef5374d2.js";import{h as se}from"./moment-fbc5633a.js";import"./AgGridTable.vue_vue_type_style_index_0_lang-56c71005.js";const de={props:{patientId:Number,moduleId:Number,componentId:Number,stageId:Number},components:{AgGridTable:ne},setup(r){const c=s(!1),u=s(0),o=s(null),I=s([]),f=s(""),m=s([]),d=s(""),k=s(""),v=s(!1),L=s(""),E=s(""),D=s(""),T=s(""),F=s(""),N=s(""),M=s([]),B=s([{headerName:"Sr. No.",valueGetter:"node.rowIndex + 1",initialWidth:20},{headerName:"Lab",field:"description",filter:!0},{headerName:"Lab Date",field:"lab_date"},{headerName:"Reading",field:"labparameter"},{headerName:"Notes",field:"notes"},{headerName:"Action",field:"action",cellRenderer:function(t){const l=t.data;return l&&l.action?l.action:""}}]),p=async()=>{try{v.value=!0;const t=await fetch(`/ccm/care-plan-development-labs-labslist/${r.patientId}`);if(!t.ok)throw new Error("Failed to fetch labs list");v.value=!1;const l=await t.json();M.value=l.data}catch(t){console.error("Error fetching labs list:",t),v.value=!1}},V=async()=>{m.value={};let t=document.getElementById("number_tracking_labs_form"),l=new FormData(t);$('div[id^="reading-"]').html(""),$('div[id^="reading-"]').hide(),$('div[id^="high_val-"]').html(""),$('div[id^="high_val-"]').hide(),l.forEach((e,i)=>{}),_.defaults.headers.common["X-CSRF-TOKEN"]=document.querySelector('meta[name="csrf-token"]').content;try{const e=await _.post("/ccm/care-plan-development-numbertracking-labs",l);e&&e.status===200&&(c.value=!0,updateTimer(r.patientId,"1",r.moduleId),$(".form_start_time").val(e.data.form_start_time),await p(),document.getElementById("number_tracking_labs_form").reset(),d.value=null,k.value=null,f.value=null,L.value=null,E.value=null,D.value=null,N.value=null,setTimeout(()=>{c.value=!1,o.value=document.getElementById("page_landing_times").value},3e3),m.value=[])}catch(e){if(e.response.status&&e.response.status===422){m.value=e.response.data.errors;for(const i in m.value)if(Object.prototype.hasOwnProperty.call(m.value,i)){const n=m.value[i];i.includes("reading")&&($("#"+i.replaceAll(".","-")).html(n),$("#"+i.replaceAll(".","-")).show()),i.includes("high_val")&&($("#"+i.replaceAll(".","-")).html(n),$("#"+i.replaceAll(".","-")).show())}}else console.error("Error submitting form:",e)}},P=async()=>{const t=d.value;_.defaults.headers.common["X-CSRF-TOKEN"]=document.querySelector('meta[name="csrf-token"]').content;try{const l=await _.post("/ccm/lab-param",{lab:t});f.value=l.data,t==""||t==null?$("#labdate").attr("name","labdate[]"):$("#labdate").attr("name","labdate["+t+"][]")}catch(l){l.status&&l.status===422?m.value=l.responseJSON.errors:console.error("Error getting lab params:",l)}},C=async t=>{try{let l="NumberTracking-Labs",e=await _.get(`/get_step_id/${r.moduleId}/${r.componentId}/${t}/${l}`);u.value=e.data.stepID}catch{throw new Error("Failed to fetch stageID")}},A=async()=>{try{await new Promise(e=>setTimeout(e,2e3));const t=await fetch("/org/active-labs");if(!t.ok)throw new Error("Failed to fetch lab list");const l=await t.json();I.value=l}catch(t){console.error("Error fetching labs list:",t),v.value=!1}},H=async(t,l,e,i)=>{if(window.confirm("Are you sure you want to delete this Service?")){const n={labid:e,uid:r.patientId,patient_id:r.patientId,module_id:r.moduleId,component_id:r.componentId,stage_id:r.stageId,step_id:u.value,form_name:"number_tracking_labs_form",billable:1,start_time:"00:00:00",end_time:"00:00:00",form_start_time:document.getElementById("page_landing_times").value,labdate:t,patientid:l,labdateexist:i};try{_.defaults.headers.common["X-CSRF-TOKEN"]=document.querySelector('meta[name="csrf-token"]').content;const g=await _.post("/ccm/delete-lab",n);updateTimer(r.patientId,"1",r.moduleId),$(".form_start_time").val(g.data.form_start_time),await p(),document.getElementById("service_dme_form").reset(),setTimeout(()=>{o.value=document.getElementById("page_landing_times").value},3e3)}catch(g){console.error("Error deletting record:",g)}}},O=()=>{window.deleteLabs=H},j=async(t,l,e,i)=>{try{v.value=!0;const n=await fetch(`/ccm/care-plan-development-populateLabs/${l}/${t}/${e}/${i}`);if(!n.ok)throw new Error("Failed to fetch labs details");v.value=!1;const K=(await n.json()).number_tracking_labs_details.dynamic.lab;d.value=e;let S=se(t,"MM-DD-YYYY").format("YYYY-MM-DD");k.value=S,f.value=G(e,K),L.value="edit",E.value=S,D.value=e,N.value=S,$("#labdate").attr("name","labdate["+e+"][]")}catch(n){console.error("Error fetching labs details:",n),v.value=!1}},G=(t,l)=>{let e="",i="";return l.forEach(n=>{e+="<div class='col-md-6 mb-3'>",e+=`<label>${n.parameter} <span class='error'>*</span></label>`,e+=`<input type='hidden' name='lab_test_id[${t}][]'  value='${n.lab_test_id}'>`,e+=`<input type='hidden' name='lab_params_id[${t}][]' value='${n.lab_test_parameter_id}'>`,n.parameter==="COVID-19"?(e+="<div class='form-row'><div class='col-md-5'>",e+=`<select class='forms-element form-control mr-1 pl-3' name='reading[${t}][]'>`,e+="<option value=''>Select Reading</option>",e+=`<option value='positive' ${n.reading==="positive"?"selected":""}>Positive</option>`,e+=`<option value='negative' ${n.reading==="negative"?"selected":""}>Negative</option></select>`,e+="<div class='invalid-feedback'></div></div>"):(e+="<div class='form-row'><div class='col-md-5'>",e+=`<select class='forms-element form-control mr-1 pl-3 labreadingclass' name='reading[${t}][]'>`,e+="<option value=''>Select Reading</option>",e+=`<option value='high' ${n.reading==="high"?"selected":""}>High</option>`,e+=`<option value='normal' ${n.reading==="normal"?"selected":""}>Normal</option>`,e+=`<option value='low' ${n.reading==="low"?"selected":""}>Low</option>`,e+=`<option value='test_not_performed' ${n.reading==="test_not_performed"?"selected":""}>Test not performed</option></select>`,e+="<div class='invalid-feedback'></div></div>",e+="<div class='col-md-6'>",e+=`<input type='text' class='forms-element form-control' name='high_val[${t}][]' value='${n.high_val}' />`,e+="<div class='invalid-feedback'></div></div>"),i=n.notes,e+="</div></div>"}),e+='<div class="col-md-12 mb-3"><label>Notes:</label>',e+=`<textarea class="forms-element form-control" name="notes[${t}]">${i}</textarea>`,e+='<div class="invalid-feedback"></div></div>',e},q=()=>{window.editlabsformnew=j};return R(()=>r.stageId,(t,l)=>{C(t)}),R(()=>c,(t,l)=>{c.value=t}),U(()=>{A(),p();const l=window.location.pathname.split("/");l.shift(),T.value=l[0],F.value=l[1]}),z(async()=>{try{o.value=document.getElementById("page_landing_times").value,O(),q()}catch(t){console.error("Error on page load:",t)}}),{loading:v,submiLabsHealthDataForm:V,labsStepId:u,formErrors:m,labsTime:o,showLabsAlert:c,columnDefs:B,labsRowData:M,selectedLabs:d,labDate:k,fetchPatientLabsList:p,deleteServices,editService,fetchLabs:A,labs:I,onLabchange:P,labParams:f,editform:L,olddate:E,oldlab:D,labdateexist:N,module_name:T,component_name:F}}},ie={class:"tab-pane fade show active",id:"labs",role:"tabpanel","aria-labelledby":"labs-icon-pill"},re={class:"card"},ce=a("div",{class:"card-header"},[a("h4",null,"Labs")],-1),me=a("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1),ue=a("strong",null," Labs data saved successfully! ",-1),ve=a("span",{id:"text"},null,-1),_e=[me,ue,ve],be={class:"col-md-12"},he=["value"],fe=["value"],pe=a("input",{type:"hidden",name:"start_time",value:"00:00:00"},null,-1),ge=a("input",{type:"hidden",name:"end_time",value:"00:00:00"},null,-1),ye=["value"],we=["value"],Ie=["value"],ke=["value"],Le=["value"],Ee=["value"],De=a("input",{type:"hidden",name:"form_name",value:"number_tracking_labs_form"},null,-1),Ne=a("input",{type:"hidden",name:"billable",value:"1"},null,-1),Se=["value"],xe=["value"],Te=["value"],Fe=["value"],Me=["value"],Ae={class:"form-row"},Re={class:"col-md-4 form-group mb-3"},Ye=a("label",null,[w("Labs"),a("span",{class:"error"},"*"),w(" :")],-1),Be=a("br",null,null,-1),Ve=a("option",{value:""},"Select Lab",-1),$e=["value"],Pe={key:0,class:"invalid-feedback",style:{display:"block"}},Ce={class:"col-md-4 form-group mb-3"},He=a("label",{for:"labdate"},[w("Date"),a("span",{class:"error"},"*"),w(" :")],-1),Oe={key:0,class:"invalid-feedback",style:{display:"block"}},je={key:1,class:"invalid-feedback",style:{display:"block"}},Ge=["innerHTML"],qe=le('<div class="card-footer"><div class="mc-footer"><div class="row"><div class="col-lg-12 text-right"><button type="submit" class="btn btn-primary m-1" id="save_number_tracking_labs_form">Save</button></div></div></div></div><div class="alert alert-danger" id="danger-alert" style="display:none;"><button type="button" class="close" data-dismiss="alert">x</button><strong> Please Fill All mandatory Fields! </strong><span id="text"></span></div>',2),Ke=a("div",{class:"separator-breadcrumb border-top"},null,-1),Xe={class:"row"},Ue={class:"col-12"};function ze(r,c,u,o,I,f){const m=J("AgGridTable");return b(),h("div",ie,[a("div",re,[ce,a("form",{id:"number_tracking_labs_form",name:"number_tracking_labs_form",onSubmit:c[3]||(c[3]=W((...d)=>o.submiLabsHealthDataForm&&o.submiLabsHealthDataForm(...d),["prevent"]))},[a("div",{class:"alert alert-success",style:Q({display:o.showLabsAlert?"block":"none"})},_e,4),a("div",be,[a("input",{type:"hidden",name:"uid",value:u.patientId},null,8,he),a("input",{type:"hidden",name:"patient_id",value:u.patientId},null,8,fe),pe,ge,a("input",{type:"hidden",name:"module_id",value:u.moduleId},null,8,ye),a("input",{type:"hidden",name:"component_id",value:u.componentId},null,8,we),a("input",{type:"hidden",name:"module_name",value:o.module_name},null,8,Ie),a("input",{type:"hidden",name:"component_name",value:o.component_name},null,8,ke),a("input",{type:"hidden",name:"stage_id",value:u.stageId},null,8,Le),a("input",{type:"hidden",name:"step_id",value:o.labsStepId},null,8,Ee),De,Ne,a("input",{type:"hidden",name:"timearr[form_start_time]",class:"timearr form_start_time",value:o.labsTime},null,8,Se),a("input",{type:"hidden",name:"editform",id:"editform",value:o.editform},null,8,xe),a("input",{type:"hidden",name:"olddate",id:"olddate",value:o.olddate},null,8,Te),a("input",{type:"hidden",name:"oldlab",id:"oldlab",value:o.oldlab},null,8,Fe),a("input",{type:"hidden",name:"labdateexist",id:"labdateexist",value:o.labdateexist},null,8,Me),a("div",Ae,[a("div",Re,[Ye,Be,Y(a("select",{name:"lab[]",class:"custom-select show-tick select2 col-md-10",id:"lab",onChange:c[0]||(c[0]=(...d)=>o.onLabchange&&o.onLabchange(...d)),"onUpdate:modelValue":c[1]||(c[1]=d=>o.selectedLabs=d)},[Ve,(b(!0),h(ee,null,ae(o.labs,d=>(b(),h("option",{key:d.id,value:d.id},y(d.description),9,$e))),128))],544),[[Z,o.selectedLabs]]),o.formErrors["lab.0"]?(b(),h("div",Pe,y(o.formErrors["lab.0"][0]),1)):x("",!0)]),a("div",Ce,[He,Y(a("input",{type:"date",name:"labdate[]",id:"labdate",class:"form-control","onUpdate:modelValue":c[2]||(c[2]=d=>o.labDate=d),"data-date-format":"MM/DD/YYYY"},null,512),[[te,o.labDate]]),o.formErrors&&o.formErrors[`labdate.${o.selectedLabs}.0`]?(b(),h("div",Oe,y(o.formErrors[`labdate.${o.selectedLabs}.0`][0]),1)):x("",!0),o.formErrors&&o.formErrors["labdate.0"]?(b(),h("div",je,y(o.formErrors["labdate.0"][0]),1)):x("",!0)])]),a("div",{innerHTML:o.labParams,class:"form-row"},null,8,Ge)]),qe],32),Ke,a("div",Xe,[a("div",Ue,[oe(m,{rowData:o.labsRowData,columnDefs:o.columnDefs},null,8,["rowData","columnDefs"])])])])])}const ea=X(de,[["render",ze]]);export{ea as default};
