import{_ as F,l as c,H as h,G as x,m as k,r as b,o as T,e as B,b as o,q as R,I as C,k as M,i as q,M as V,f as w,N as A,d as G}from"./appInertia-bd981cc7.js";import K from"./AgGridTable-ef5374d2.js";import L from"./AllergiesShortForm-5982317e.js";import"./AgGridTable.vue_vue_type_style_index_0_lang-56c71005.js";const O={props:{patientId:Number,moduleId:Number,componentId:Number,stageId:Number},components:{FoodForm:L,AgGridTable:K},data(){return{allergyStatus:!1,foodAllergiesRowData:[]}},computed:{foodAllergiesRowCount(){return this.foodAllergiesRowData.length}},methods:{hideShowNKDAMsg(e,r){var d=$("#"+e).val();d>0&&($("#"+r).show(),setTimeout(function(){$("#"+r).hide()},5e3))},noAllergiesCheck(){if(this.allergyStatus){$(".noallergiescheck").closest("form");var e="allergy_food_form";this.hideShowNKDAMsg("foodcount","msg"),$("form[name='"+e+"'] input[name='specify']").val(""),$("form[name='"+e+"'] input[name='type_of_reactions']").val(""),$("form[name='"+e+"'] input[name='severity']").val(""),$("form[name='"+e+"'] input[name='course_of_treatment']").val(""),$("form[name='"+e+"'] textarea[name='notes']").val(""),$("form[name='"+e+"'] input[name='specify']").attr("disabled","disabled"),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!0),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!0),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!0),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!0)}else{$(".noallergiescheck").closest("form");var e="allergy_food_form";$("form[name='"+e+"']")[0].reset(),$("form[name='"+e+"'] input[name='specify']").prop("disabled",!1),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!1),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!1),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!1),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!1)}}},setup(e){let r=c(!1),d=c(0),s=c(0),u=c(null),n=c([]);const _=c(!1),p=c([]);let f=c([{headerName:"Sr. No.",valueGetter:"node.rowIndex + 1",initialWidth:20},{headerName:"Specify",field:"specify",filter:!0},{headerName:"Type of Reactions",field:"type_of_reactions"},{headerName:"Severity",field:"severity"},{headerName:"Course of Treatment",field:"course_of_treatment"},{headerName:"Allergy Status",field:"allergy_status"},{headerName:"Last Modified By",field:"users.f_name",cellRenderer:function(l){const t=l.data;return t&&t.users&&t.users.f_name?t.users.f_name+" "+(t.users.l_name||""):"N/A"}},{headerName:"Last Modified On",field:"updated_at"},{headerName:"Action",field:"action",cellRenderer:function(l){const t=l.data;return t&&t.action?t.action:""}}]);const g=async()=>{try{_.value=!0,await new Promise(m=>setTimeout(m,2e3));const l=window.location.origin,t=await fetch(`${l}/ccm/allergies/${e.patientId}/food`);if(!t.ok)throw new Error("Failed to fetch followup task list");_.value=!1;const a=await t.json();p.value=a.data}catch(l){console.error("Error fetching followup task list:",l),_.value=!1}};let I=async()=>{n.value={};let l=document.getElementById("allergy_food_form"),t=new FormData(l),a={};t.forEach((i,E)=>{a[E]=i});try{const i=await saveAllergies(a);console.log("in food saveAllergiesResponse",i),r.value=!0,updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(i.form_start_time),await g();var m=$("#allergy_food_form")[0];m.reset(),$(m).find(":input").prop("disabled",!1),setTimeout(()=>{r.value=!1,u.value=document.getElementById("page_landing_times").value},3e3),n.value=[]}catch(i){i.status&&i.status===422?n.value=i.responseJSON.errors:console.error("Error submitting form:",i),console.error("Error in saveAllergies",n.value)}},S=async l=>{try{let t="Food";s=(await G.get(`/get_step_id/${e.moduleId}/${e.componentId}/${l}/${t}`)).data.stepID,console.log("stepIDstepID",s)}catch{throw new Error("Failed to fetch stageID")}},y=async(l,t)=>{if(window.confirm("Are you sure you want to delete this Allergies?")){const a={id:l,uid:e.patientId,patient_id:e.patientId,module_id:e.moduleId,component_id:e.componentId,stage_id:e.stageId,step_id:s.value,form_name:"allergy_food_form",billable:1,start_time:"00:00:00",end_time:"00:00:00",form_start_time:document.getElementById("page_landing_times").value};try{const m=await deleteAllergiesDetails(a);updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(m.form_start_time),await g(),document.getElementById("allergy_food_form").reset(),setTimeout(()=>{u.value=document.getElementById("page_landing_times").value},3e3)}catch(m){console.error("Error deletting record:",m)}}},v=async l=>{try{const t=p.value.find(a=>a.id==l);if(console.log(t),t){const a=document.getElementById("allergy_food_form");a.querySelector("#allergies_id").value=t.id,a.querySelector("#specify").value=t.specify,a.querySelector("#type_of_reactions").value=t.type_of_reactions,a.querySelector("#severity").value=t.severity,a.querySelector("#course_of_treatment").value=t.course_of_treatment,a.querySelector("#notes").value=t.notes,a.scrollIntoView({behavior:"smooth"})}}catch(t){console.error("Error editing allergies:",t)}};const N=()=>{window.deleteAllergies=y},D=()=>{window.editAllergy=v};return h(()=>e.stageId,(l,t)=>{S(l)}),h(()=>r,(l,t)=>{r.value=l}),x(()=>{g()}),k(async()=>{try{u.value=document.getElementById("page_landing_times").value,N(),D()}catch(l){console.error("Error on page load:",l)}}),{loading:_,submitAllergiesForm:I,foodallergiesStageId:d,foodallergiesStepId:s,formErrors:n,foodallergiesTime:u,showfoodAlert:r,foodAllergiescolumnDefs:f,foodAllergiesRowData:p,fetchPatientFoodList:g,deleteAllergies:y,editAllergy:v}}},P={class:"tab-pane fade show active",id:"food",role:"tabpanel","aria-labelledby":"food-allergies-icon-pill"},j={class:"card"},z=o("div",{class:"card-header"},[o("h4",null,"Food")],-1),U=o("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1),H=o("strong",null," Food Allergies data saved successfully! ",-1),J=o("span",{id:"text"},null,-1),W=[U,H,J],Q={class:"form-row col-md-12"},X=["value"],Y=["value"],Z=o("input",{type:"hidden",name:"start_time",value:"00:00:00"},null,-1),ee=o("input",{type:"hidden",name:"end_time",value:"00:00:00"},null,-1),te=["value"],oe=["value"],le=["value"],ae=["value"],re=A('<input type="hidden" name="form_name" value="allergy_food_form"><input type="hidden" name="billable" value="1"><input type="hidden" name="allergy_type" value="food"><input type="hidden" name="hid" class="hid" value="1"><input type="hidden" name="id" id="allergies_id">',5),se=["value"],ne=o("input",{type:"hidden",name:"noallergymsg",id:"noallergymsg",value:"No Known Food Allergies"},null,-1),ie={class:"checkbox noAllergiesLbl",style:{"z-index":"1"}},de=o("div",{id:"msg",style:{color:"red",display:"none"}},"Please delete all data from below table to enable checkbox!",-1),me=o("span",{class:"checkmark"},null,-1),ce=["value"],ue=A('<div class="card-footer"><div class="mc-footer"><div class="row"><div class="col-lg-12 text-right"><button type="submit" class="btn btn-primary m-1" id="save_allergy_food_form">Save</button></div></div></div></div><div class="alert alert-danger" id="danger-alert" style="display:none;"><button type="button" class="close" data-dismiss="alert">x</button><strong> Please Fill All mandatory Fields! </strong><span id="text"></span></div>',2),fe=o("div",{class:"separator-breadcrumb border-top"},null,-1),_e={class:"row"},pe={class:"col-12"};function ge(e,r,d,s,u,n){const _=b("FoodForm"),p=b("AgGridTable");return T(),B("div",P,[o("div",j,[z,o("form",{id:"allergy_food_form",name:"allergy_food_form",onSubmit:r[2]||(r[2]=R((...f)=>s.submitAllergiesForm&&s.submitAllergiesForm(...f),["prevent"]))},[o("div",{class:"alert alert-success",style:C({display:s.showfoodAlert?"block":"none"})},W,4),o("div",Q,[o("input",{type:"hidden",name:"uid",value:d.patientId},null,8,X),o("input",{type:"hidden",name:"patient_id",value:d.patientId},null,8,Y),Z,ee,o("input",{type:"hidden",name:"module_id",value:d.moduleId},null,8,te),o("input",{type:"hidden",name:"component_id",value:d.componentId},null,8,oe),o("input",{type:"hidden",name:"stage_id",value:s.foodallergiesStageId},null,8,le),o("input",{type:"hidden",name:"step_id",value:s.foodallergiesStepId},null,8,ae),re,o("input",{type:"hidden",name:"timearr[form_start_time]",class:"timearr form_start_time",value:s.foodallergiesTime},null,8,se),ne,o("label",ie,[M(" No Known Food Allergies "),q(o("input",{type:"checkbox","onUpdate:modelValue":r[0]||(r[0]=f=>u.allergyStatus=f),name:"allergy_status",onChange:r[1]||(r[1]=(...f)=>n.noAllergiesCheck&&n.noAllergiesCheck(...f)),style:{position:"absolute","z-index":"-1"}},null,544),[[V,u.allergyStatus]]),de,me]),o("input",{type:"hidden",id:"foodcount",value:n.foodAllergiesRowCount},null,8,ce),w(_,{formErrors:s.formErrors},null,8,["formErrors"])]),ue],32),fe,o("div",_e,[o("div",pe,[w(p,{rowData:s.foodAllergiesRowData,columnDefs:s.foodAllergiescolumnDefs},null,8,["rowData","columnDefs"])])])])])}const we=F(O,[["render",ge]]);export{we as default};
