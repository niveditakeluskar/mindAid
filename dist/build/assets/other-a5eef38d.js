import{_ as x,l as c,H as v,G as k,m as O,r as b,o as T,e as B,b as l,q as F,I as R,k as C,i as M,M as q,f as w,N as A,d as V}from"./appInertia-bd981cc7.js";import G from"./AgGridTable-ef5374d2.js";import K from"./AllergiesShortForm-5982317e.js";import"./AgGridTable.vue_vue_type_style_index_0_lang-56c71005.js";const L={props:{patientId:Number,moduleId:Number,componentId:Number,stageId:Number},components:{OtherForm:K,AgGridTable:G},data(){return{allergyStatus:!1,otherAllergiesRowData:[]}},computed:{otherAllergiesRowCount(){return this.otherAllergiesRowData.length}},methods:{hideShowNKDAMsg(e,o){var d=$("#"+e).val();d>0&&($("#"+o).show(),setTimeout(function(){$("#"+o).hide()},5e3))},noAllergiesCheck(){if(this.allergyStatus){$(".noallergiescheck").closest("form");var e="allergy_other_allergy_form";this.hideShowNKDAMsg("othercount","msg"),$("form[name='"+e+"'] input[name='specify']").val(""),$("form[name='"+e+"'] input[name='type_of_reactions']").val(""),$("form[name='"+e+"'] input[name='severity']").val(""),$("form[name='"+e+"'] input[name='course_of_treatment']").val(""),$("form[name='"+e+"'] textarea[name='notes']").val(""),$("form[name='"+e+"'] input[name='specify']").attr("disabled","disabled"),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!0),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!0),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!0),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!0)}else{$(".noallergiescheck").closest("form");var e="allergy_other_allergy_form";$("form[name='"+e+"']")[0].reset(),$("form[name='"+e+"'] input[name='specify']").prop("disabled",!1),$("form[name='"+e+"'] input[name='type_of_reactions']").prop("disabled",!1),$("form[name='"+e+"'] input[name='severity']").prop("disabled",!1),$("form[name='"+e+"'] input[name='course_of_treatment']").prop("disabled",!1),$("form[name='"+e+"'] textarea[name='notes']").prop("disabled",!1)}}},setup(e){let o=c(!1),d=c(0),s=c(0),u=c(null),n=c([]);const h=c(!1),g=c([]);let _=c([{headerName:"Sr. No.",valueGetter:"node.rowIndex + 1",initialWidth:20},{headerName:"Specify",field:"specify",filter:!0},{headerName:"Type of Reactions",field:"type_of_reactions"},{headerName:"Severity",field:"severity"},{headerName:"Course of Treatment",field:"course_of_treatment"},{headerName:"Allergy Status",field:"allergy_status"},{headerName:"Last Modified By",field:"users.f_name",cellRenderer:function(a){const t=a.data;return t&&t.users&&t.users.f_name?t.users.f_name+" "+(t.users.l_name||""):"N/A"}},{headerName:"Last Modified On",field:"updated_at"},{headerName:"Action",field:"action",cellRenderer:function(a){const t=a.data;return t&&t.action?t.action:""}}]);const f=async()=>{try{h.value=!0,await new Promise(m=>setTimeout(m,2e3));const a=window.location.origin,t=await fetch(`${a}/ccm/allergies/${e.patientId}/other`);if(!t.ok)throw new Error("Failed to fetch followup task list");h.value=!1;const r=await t.json();g.value=r.data}catch(a){console.error("Error fetching followup task list:",a),h.value=!1}},I=async()=>{n.value={};let a=document.getElementById("allergy_other_allergy_form"),t=new FormData(a),r={};t.forEach((i,E)=>{r[E]=i});try{const i=await saveAllergies(r);console.log("in durg saveAllergiesResponse",i),o.value=!0,updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(i.form_start_time),await f();var m=$("#allergy_other_allergy_form")[0];m.reset(),$(m).find(":input").prop("disabled",!1),setTimeout(()=>{o.value=!1,u.value=document.getElementById("page_landing_times").value},3e3),n.value=[]}catch(i){i.status&&i.status===422?n.value=i.responseJSON.errors:console.error("Error submitting form:",i),console.error("Error in saveAllergies",n.value)}},S=async a=>{try{let t="Other";s=(await V.get(`/get_step_id/${e.moduleId}/${e.componentId}/${a}/${t}`)).data.stepID,console.log("stepIDstepID",s)}catch{throw new Error("Failed to fetch stageID")}},p=async(a,t)=>{if(window.confirm("Are you sure you want to delete this Allergies?")){const r={id:a,uid:e.patientId,patient_id:e.patientId,module_id:e.moduleId,component_id:e.componentId,stage_id:e.stageId,step_id:s.value,form_name:"allergy_other_allergy_form",billable:1,start_time:"00:00:00",end_time:"00:00:00",form_start_time:document.getElementById("page_landing_times").value};try{const m=await deleteAllergiesDetails(r);updateTimer(e.patientId,"1",e.moduleId),$(".form_start_time").val(m.form_start_time),await f(),document.getElementById("allergy_other_allergy_form").reset(),setTimeout(()=>{u.value=document.getElementById("page_landing_times").value},3e3)}catch(m){console.error("Error deletting record:",m)}}},y=async a=>{try{const t=g.value.find(r=>r.id==a);if(console.log(t),t){const r=document.getElementById("allergy_other_allergy_form");r.querySelector("#allergies_id").value=t.id,r.querySelector("#specify").value=t.specify,r.querySelector("#type_of_reactions").value=t.type_of_reactions,r.querySelector("#severity").value=t.severity,r.querySelector("#course_of_treatment").value=t.course_of_treatment,r.querySelector("#notes").value=t.notes,r.scrollIntoView({behavior:"smooth"})}}catch(t){console.error("Error editing allergies:",t)}},N=()=>{window.deleteAllergies=p},D=()=>{window.editAllergy=y};return v(()=>e.stageId,(a,t)=>{S(a)}),v(()=>o,(a,t)=>{o.value=a}),k(()=>{f()}),O(async()=>{try{u.value=document.getElementById("page_landing_times").value,N(),D()}catch(a){console.error("Error on page load:",a)}}),{loading:h,submitAllergiesForm:I,otherallergiesStageId:d,otherallergiesStepId:s,formErrors:n,otherallergiesTime:u,showOtherAlert:o,otherAllergiescolumnDefs:_,otherAllergiesRowData:g,fetchPatientOtherList:f,deleteAllergies:p,editAllergy:y}}},P={class:"tab-pane fade show active",id:"other",role:"tabpanel","aria-labelledby":"other-allergies-icon-pill"},j={class:"card"},z=l("div",{class:"card-header"},[l("h4",null,"Other")],-1),U=l("button",{type:"button",class:"close","data-dismiss":"alert"},"x",-1),H=l("strong",null," Other Allergies data saved successfully! ",-1),J=l("span",{id:"text"},null,-1),W=[U,H,J],Q={class:"form-row col-md-12"},X=["value"],Y=["value"],Z=l("input",{type:"hidden",name:"start_time",value:"00:00:00"},null,-1),ee=l("input",{type:"hidden",name:"end_time",value:"00:00:00"},null,-1),te=["value"],le=["value"],ae=["value"],re=["value"],oe=A('<input type="hidden" name="form_name" value="allergy_other_allergy_form"><input type="hidden" name="billable" value="1"><input type="hidden" name="allergy_type" value="other"><input type="hidden" name="hid" class="hid" value="1"><input type="hidden" name="id" id="allergies_id">',5),se=["value"],ne=l("input",{type:"hidden",name:"noallergymsg",id:"noallergymsg",value:"No Known Other Allergies"},null,-1),ie={class:"checkbox noAllergiesLbl",style:{"z-index":"1"}},de=l("div",{id:"msg",style:{color:"red",display:"none"}},"Please delete all data from below table to enable checkbox!",-1),me=l("span",{class:"checkmark"},null,-1),ce=["value"],ue=A('<div class="card-footer"><div class="mc-footer"><div class="row"><div class="col-lg-12 text-right"><button type="submit" class="btn btn-primary m-1" id="save_allergy_other_allergy_form">Save</button></div></div></div></div><div class="alert alert-danger" id="danger-alert" style="display:none;"><button type="button" class="close" data-dismiss="alert">x</button><strong> Please Fill All mandatory Fields! </strong><span id="text"></span></div>',2),_e=l("div",{class:"separator-breadcrumb border-top"},null,-1),he={class:"row"},ge={class:"col-12"};function fe(e,o,d,s,u,n){const h=b("OtherForm"),g=b("AgGridTable");return T(),B("div",P,[l("div",j,[z,l("form",{id:"allergy_other_allergy_form",name:"allergy_other_allergy_form",onSubmit:o[2]||(o[2]=F((..._)=>s.submitAllergiesForm&&s.submitAllergiesForm(..._),["prevent"]))},[l("div",{class:"alert alert-success",style:R({display:s.showOtherAlert?"block":"none"})},W,4),l("div",Q,[l("input",{type:"hidden",name:"uid",value:d.patientId},null,8,X),l("input",{type:"hidden",name:"patient_id",value:d.patientId},null,8,Y),Z,ee,l("input",{type:"hidden",name:"module_id",value:d.moduleId},null,8,te),l("input",{type:"hidden",name:"component_id",value:d.componentId},null,8,le),l("input",{type:"hidden",name:"stage_id",value:s.otherallergiesStageId},null,8,ae),l("input",{type:"hidden",name:"step_id",value:s.otherallergiesStepId},null,8,re),oe,l("input",{type:"hidden",name:"timearr[form_start_time]",class:"timearr form_start_time",value:s.otherallergiesTime},null,8,se),ne,l("label",ie,[C(" No Known Other Allergies "),M(l("input",{type:"checkbox","onUpdate:modelValue":o[0]||(o[0]=_=>u.allergyStatus=_),name:"allergy_status",onChange:o[1]||(o[1]=(..._)=>n.noAllergiesCheck&&n.noAllergiesCheck(..._)),style:{position:"absolute","z-index":"-1"}},null,544),[[q,u.allergyStatus]]),de,me]),l("input",{type:"hidden",id:"othercount",value:n.otherAllergiesRowCount},null,8,ce),w(h,{formErrors:s.formErrors},null,8,["formErrors"])]),ue],32),_e,l("div",he,[l("div",ge,[w(g,{rowData:s.otherAllergiesRowData,columnDefs:s.otherAllergiescolumnDefs},null,8,["rowData","columnDefs"])])])])])}const we=x(L,[["render",fe]]);export{we as default};
